{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\component\\\\pedidos\\\\AsignarCliente.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport Select from 'react-select';\nimport { useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContex';\nimport { OBTENER_CLIENTES_VENDEDOR } from '../../graphql/clientes';\nexport default function AsignarCliente() {\n  _s();\n\n  var _useState = useState([]),\n      cliente = _useState[0],\n      setCliente = _useState[1];\n\n  var _useQuery = useQuery(OBTENER_CLIENTES_VENDEDOR),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  useEffect(function () {\n    console.log(cliente);\n  }, [cliente]);\n\n  var seleccionarCliente = function seleccionarCliente(client) {\n    setCliente(client);\n  };\n\n  if (loading) return null;\n  if (error) return null;\n  var obtenerClientesVendedor = data === null || data === void 0 ? void 0 : data.obtenerClientesVendedor;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"1.- Asigna un Cliente al pedido\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerClientesVendedor,\n    onChange: function onChange(opc) {\n      return seleccionarCliente(opc);\n    },\n    getOptionValue: function getOptionValue(opc) {\n      return opc.id;\n    },\n    getOptionLabel: function getOptionLabel(opc) {\n      return opc.nombre;\n    },\n    placeholder: \"Seleccionar Cliente\",\n    noOptionsMessage: function noOptionsMessage() {\n      return 'No hay resultados';\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(AsignarCliente, \"34RUm7jcQiBnIL6UPzwancz1Pa0=\", false, function () {\n  return [useQuery];\n});\n\n_c = AsignarCliente;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsignarCliente\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/component/pedidos/AsignarCliente.js"],"names":["React","useState","useEffect","useContext","Select","useQuery","PedidoContext","OBTENER_CLIENTES_VENDEDOR","AsignarCliente","cliente","setCliente","data","loading","error","console","log","seleccionarCliente","client","obtenerClientesVendedor","opc","id","nombre"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,yBAAT,QAA0C,wBAA1C;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAAA,kBACTP,QAAQ,CAAC,EAAD,CADC;AAAA,MAChCQ,OADgC;AAAA,MACvBC,UADuB;;AAAA,kBAENL,QAAQ,CAACE,yBAAD,CAFF;AAAA,MAE/BI,IAF+B,aAE/BA,IAF+B;AAAA,MAEzBC,OAFyB,aAEzBA,OAFyB;AAAA,MAEhBC,KAFgB,aAEhBA,KAFgB;;AAIvCX,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,MAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD,EAAY;AACrCP,IAAAA,UAAU,CAACO,MAAD,CAAV;AACD,GAFD;;AAIA,MAAIL,OAAJ,EAAa,OAAO,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,IAAP;AACX,MAAMK,uBAAuB,GAAGP,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEO,uBAAtC;AAEA,SACE,4BACE;AAAG,IAAA,SAAS,EAAC,oFAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAKE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,OAAO,EAAEA,uBAFX;AAGE,IAAA,QAAQ,EAAE,kBAACC,GAAD;AAAA,aAASH,kBAAkB,CAACG,GAAD,CAA3B;AAAA,KAHZ;AAIE,IAAA,cAAc,EAAE,wBAACA,GAAD;AAAA,aAASA,GAAG,CAACC,EAAb;AAAA,KAJlB;AAKE,IAAA,cAAc,EAAE,wBAACD,GAAD;AAAA,aAASA,GAAG,CAACE,MAAb;AAAA,KALlB;AAME,IAAA,WAAW,EAAC,qBANd;AAOE,IAAA,gBAAgB,EAAE;AAAA,aAAM,mBAAN;AAAA,KAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAiBD;;GAjCuBb,c;UAEWH,Q;;;KAFXG,c","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport Select from 'react-select';\r\nimport { useQuery } from '@apollo/client';\r\nimport PedidoContext from '../../context/pedidos/PedidoContex';\r\nimport { OBTENER_CLIENTES_VENDEDOR } from '../../graphql/clientes';\r\n\r\nexport default function AsignarCliente() {\r\n  const [cliente, setCliente] = useState([]);\r\n  const { data, loading, error } = useQuery(OBTENER_CLIENTES_VENDEDOR);\r\n\r\n  useEffect(() => {\r\n    console.log(cliente);\r\n  }, [cliente]);\r\n\r\n  const seleccionarCliente = (client) => {\r\n    setCliente(client);\r\n  };\r\n\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  const obtenerClientesVendedor = data?.obtenerClientesVendedor;\r\n\r\n  return (\r\n    <>\r\n      <p className=\"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\">\r\n        1.- Asigna un Cliente al pedido\r\n      </p>\r\n\r\n      <Select\r\n        className=\"mt-3\"\r\n        options={obtenerClientesVendedor}\r\n        onChange={(opc) => seleccionarCliente(opc)}\r\n        getOptionValue={(opc) => opc.id}\r\n        getOptionLabel={(opc) => opc.nombre}\r\n        placeholder=\"Seleccionar Cliente\"\r\n        noOptionsMessage={() => 'No hay resultados'}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}