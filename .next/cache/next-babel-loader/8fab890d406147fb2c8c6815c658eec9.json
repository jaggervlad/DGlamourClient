{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\component\\\\NuevaCuenta.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from './Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useMutation } from '@apollo/client';\nimport { useMessage } from '../hooks/useMessage';\nvar initialValues = {\n  nombre: '',\n  apellido: '',\n  email: '',\n  password: ''\n};\nvar validationSchema = Yup.object().shape({\n  nombre: Yup.string().required('El Nombre es Obligatorio'),\n  apellido: Yup.string().required('El Apellido es obligatorio'),\n  email: Yup.string().email('El email no es válido').required('El email es obligatorio'),\n  password: Yup.string().required('El password no puede ir vacio').min(6, 'El password debe ser de al menos 6 caracteres')\n});\nvar router = useRouter();\n\nvar NuevaCuenta = function NuevaCuenta() {\n  _s();\n\n  var _useMessage = useMessage(),\n      _useMessage2 = _slicedToArray(_useMessage, 3),\n      mensaje = _useMessage2[0],\n      guardarMensaje = _useMessage2[1],\n      mostrarMensaje = _useMessage2[2]; // Mutation para crear nuevos usuarios\n\n\n  var _useMutation = useMutation(NUEVA_CUENTA),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoUsuario = _useMutation2[0]; // Routing\n\n\n  var formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, herlpers) {\n        var _valores, nombre, apellido, email, password, input, _yield$nuevoUsuario, _data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _valores = valores, nombre = _valores.nombre, apellido = _valores.apellido, email = _valores.email, password = _valores.password;\n                input = {\n                  nombre: nombre,\n                  apellido: apellido,\n                  email: email,\n                  password: password\n                };\n                _context.prev = 2;\n                _context.next = 5;\n                return nuevoUsuario({\n                  variables: {\n                    input: input\n                  }\n                });\n\n              case 5:\n                _yield$nuevoUsuario = _context.sent;\n                _data = _yield$nuevoUsuario.data;\n                console.log(_data); // Usuario creado correctamente\n\n                guardarMensaje(\"Se creo correctamente el Usuario: \".concat(_data.nuevoUsuario.nombre, \" \")); // setTimeout(() => {\n                //   guardarMensaje(null);\n                //   herlpers.setSubmitting(false);\n                //   router.push('/login');\n                // }, 3000);\n                // Redirigir usuario para iniciar sesión\n\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                guardarMensaje(_context.t0.message.replace('GraphQL error: ', ''));\n                setTimeout(function () {\n                  guardarMensaje(null);\n                }, 3000);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, mensaje && mostrarMensaje(), __jsx(\"h1\", {\n    className: \"text-center text-2xl text-white font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Crear Nueva Cuenta\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Usuario\",\n    value: formik.values.nombre,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"apellido\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Apellido\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"apellido\",\n    type: \"text\",\n    placeholder: \"Apellido Usuario\",\n    value: formik.values.apellido,\n    onChange: formik.handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), formik.touched.apellido && formik.errors.apellido ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, formik.errors.apellido)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Usuario\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password Usuario\",\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  })), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, formik.errors.password)) : null, __jsx(\"input\", {\n    disabled: formik.isSubmitting,\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercas hover:cursor-pointer hover:bg-gray-900\",\n    value: \"Crear Cuenta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }))))));\n};\n\n_s(NuevaCuenta, \"GDlyQo47NxVowIMFUAKs7BIWGp4=\", false, function () {\n  return [useMessage, useMutation, useFormik];\n});\n\n_c = NuevaCuenta;\nexport default NuevaCuenta;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevaCuenta\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/component/NuevaCuenta.js"],"names":["React","useRouter","Layout","useFormik","Yup","useMutation","useMessage","initialValues","nombre","apellido","email","password","validationSchema","object","shape","string","required","min","router","NuevaCuenta","mensaje","guardarMensaje","mostrarMensaje","NUEVA_CUENTA","nuevoUsuario","formik","onSubmit","data","herlpers","valores","input","variables","console","log","message","replace","setTimeout","handleSubmit","values","handleChange","handleBlur","touched","errors","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Layout from './Layout';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useMessage } from '../hooks/useMessage';\r\n\r\nconst initialValues = {\r\n  nombre: '',\r\n  apellido: '',\r\n  email: '',\r\n  password: '',\r\n};\r\nconst validationSchema = Yup.object().shape({\r\n  nombre: Yup.string().required('El Nombre es Obligatorio'),\r\n  apellido: Yup.string().required('El Apellido es obligatorio'),\r\n  email: Yup.string()\r\n    .email('El email no es válido')\r\n    .required('El email es obligatorio'),\r\n  password: Yup.string()\r\n    .required('El password no puede ir vacio')\r\n    .min(6, 'El password debe ser de al menos 6 caracteres'),\r\n});\r\n\r\nconst router = useRouter();\r\n\r\nconst NuevaCuenta = () => {\r\n  const [mensaje, guardarMensaje, mostrarMensaje] = useMessage();\r\n  // Mutation para crear nuevos usuarios\r\n  const [nuevoUsuario] = useMutation(NUEVA_CUENTA);\r\n  // Routing\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (data, herlpers) => {\r\n      const { nombre, apellido, email, password } = valores;\r\n      const input = {\r\n        nombre,\r\n        apellido,\r\n        email,\r\n        password,\r\n      };\r\n      try {\r\n        const { data } = await nuevoUsuario({\r\n          variables: { input },\r\n        });\r\n        console.log(data);\r\n\r\n        // Usuario creado correctamente\r\n        guardarMensaje(\r\n          `Se creo correctamente el Usuario: ${data.nuevoUsuario.nombre} `\r\n        );\r\n\r\n        // setTimeout(() => {\r\n        //   guardarMensaje(null);\r\n        //   herlpers.setSubmitting(false);\r\n        //   router.push('/login');\r\n        // }, 3000);\r\n\r\n        // Redirigir usuario para iniciar sesión\r\n      } catch (error) {\r\n        guardarMensaje(error.message.replace('GraphQL error: ', ''));\r\n        setTimeout(() => {\r\n          guardarMensaje(null);\r\n        }, 3000);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        {mensaje && mostrarMensaje()}\r\n\r\n        <h1 className=\"text-center text-2xl text-white font-light\">\r\n          Crear Nueva Cuenta\r\n        </h1>\r\n\r\n        <div className=\"flex justify-center mt-5\">\r\n          <div className=\"w-full max-w-sm\">\r\n            <form\r\n              className=\"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\"\r\n              onSubmit={formik.handleSubmit}\r\n            >\r\n              <div className=\"mb-4\">\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"nombre\"\r\n                >\r\n                  Nombre\r\n                </label>\r\n\r\n                <input\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  id=\"nombre\"\r\n                  type=\"text\"\r\n                  placeholder=\"Nombre Usuario\"\r\n                  value={formik.values.nombre}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                />\r\n              </div>\r\n\r\n              {formik.touched.nombre && formik.errors.nombre ? (\r\n                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                  <p className=\"font-bold\">Error</p>\r\n                  <p>{formik.errors.nombre}</p>\r\n                </div>\r\n              ) : null}\r\n\r\n              <div className=\"mb-4\">\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"apellido\"\r\n                >\r\n                  Apellido\r\n                </label>\r\n\r\n                <input\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  id=\"apellido\"\r\n                  type=\"text\"\r\n                  placeholder=\"Apellido Usuario\"\r\n                  value={formik.values.apellido}\r\n                  onChange={formik.handleChange}\r\n                />\r\n              </div>\r\n\r\n              {formik.touched.apellido && formik.errors.apellido ? (\r\n                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                  <p className=\"font-bold\">Error</p>\r\n                  <p>{formik.errors.apellido}</p>\r\n                </div>\r\n              ) : null}\r\n\r\n              <div className=\"mb-4\">\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"email\"\r\n                >\r\n                  Email\r\n                </label>\r\n\r\n                <input\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email Usuario\"\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange}\r\n                />\r\n              </div>\r\n\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                  <p className=\"font-bold\">Error</p>\r\n                  <p>{formik.errors.email}</p>\r\n                </div>\r\n              ) : null}\r\n\r\n              <div className=\"mb-4\">\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"password\"\r\n                >\r\n                  Password\r\n                </label>\r\n\r\n                <input\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password Usuario\"\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}\r\n                />\r\n              </div>\r\n\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                  <p className=\"font-bold\">Error</p>\r\n                  <p>{formik.errors.password}</p>\r\n                </div>\r\n              ) : null}\r\n\r\n              <input\r\n                disabled={formik.isSubmitting}\r\n                type=\"submit\"\r\n                className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercas hover:cursor-pointer hover:bg-gray-900\"\r\n                value=\"Crear Cuenta\"\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NuevaCuenta;\r\n"]},"metadata":{},"sourceType":"module"}