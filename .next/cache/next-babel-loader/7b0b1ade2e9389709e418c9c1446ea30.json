{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\component\\\\pedidos\\\\AsignarProductos.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport Select from 'react-select';\nimport { useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContex';\nimport { OBTENER_PRODUCTOS } from '../../graphql/productos';\nexport default function AsignarProductos() {\n  _s();\n\n  var _useState = useState([]),\n      productos = _useState[0],\n      setProductos = _useState[1];\n\n  var _useContext = useContext(PedidoContext),\n      agregarProducto = _useContext.agregarProducto;\n\n  console.log(agregarProducto);\n\n  var _useQuery = useQuery(OBTENER_PRODUCTOS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  console.log(loading);\n  console.log(error);\n  console.log(data);\n  useEffect(function () {\n    console.log(productos);\n  }, [cliente]);\n\n  var seleccionarProductos = function seleccionarProductos(productos) {\n    setProductos(productos);\n  };\n\n  if (loading) return null;\n  if (error) return null;\n  var obtenerProductos = data === null || data === void 0 ? void 0 : data.obtenerProductos;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"1.- Asigna un Cliente al pedido\"), __jsx(Select, {\n    className: \"mt-3\",\n    isMulti: true // options={obtenerClientesVendedor}\n    ,\n    onChange: function onChange(opc) {\n      return seleccionarCliente(opc);\n    },\n    getOptionValue: function getOptionValue(opc) {\n      return opc.id;\n    },\n    getOptionLabel: function getOptionLabel(opc) {\n      return opc.nombre;\n    },\n    placeholder: \"Seleccionar Cliente\",\n    noOptionsMessage: function noOptionsMessage() {\n      return 'No hay resultados';\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(AsignarProductos, \"Ggi7shdCr+0EM3QijqYZj4b6XTU=\", false, function () {\n  return [useQuery];\n});\n\n_c = AsignarProductos;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsignarProductos\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/component/pedidos/AsignarProductos.js"],"names":["React","useState","useEffect","useContext","Select","useQuery","PedidoContext","OBTENER_PRODUCTOS","AsignarProductos","productos","setProductos","agregarProducto","console","log","data","loading","error","cliente","seleccionarProductos","obtenerProductos","opc","seleccionarCliente","id","nombre"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AAAA,kBACPP,QAAQ,CAAC,EAAD,CADD;AAAA,MAClCQ,SADkC;AAAA,MACvBC,YADuB;;AAAA,oBAEbP,UAAU,CAACG,aAAD,CAFG;AAAA,MAEjCK,eAFiC,eAEjCA,eAFiC;;AAGzCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;;AAHyC,kBAIRN,QAAQ,CAACE,iBAAD,CAJA;AAAA,MAIjCO,IAJiC,aAIjCA,IAJiC;AAAA,MAI3BC,OAJ2B,aAI3BA,OAJ2B;AAAA,MAIlBC,KAJkB,aAIlBA,KAJkB;;AAKzCJ,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACD,GAFQ,EAEN,CAACQ,OAAD,CAFM,CAAT;;AAIA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACT,SAAD,EAAe;AAC1CC,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,GAFD;;AAIA,MAAIM,OAAJ,EAAa,OAAO,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,IAAP;AACX,MAAMG,gBAAgB,GAAGL,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEK,gBAA/B;AAEA,SACE,4BACE;AAAG,IAAA,SAAS,EAAC,oFAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAKE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,OAAO,EAAE,IAFX,CAGE;AAHF;AAIE,IAAA,QAAQ,EAAE,kBAACC,GAAD;AAAA,aAASC,kBAAkB,CAACD,GAAD,CAA3B;AAAA,KAJZ;AAKE,IAAA,cAAc,EAAE,wBAACA,GAAD;AAAA,aAASA,GAAG,CAACE,EAAb;AAAA,KALlB;AAME,IAAA,cAAc,EAAE,wBAACF,GAAD;AAAA,aAASA,GAAG,CAACG,MAAb;AAAA,KANlB;AAOE,IAAA,WAAW,EAAC,qBAPd;AAQE,IAAA,gBAAgB,EAAE;AAAA,aAAM,mBAAN;AAAA,KARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAkBD;;GAvCuBf,gB;UAIWH,Q;;;KAJXG,gB","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport Select from 'react-select';\r\nimport { useQuery } from '@apollo/client';\r\nimport PedidoContext from '../../context/pedidos/PedidoContex';\r\nimport { OBTENER_PRODUCTOS } from '../../graphql/productos';\r\n\r\nexport default function AsignarProductos() {\r\n  const [productos, setProductos] = useState([]);\r\n  const { agregarProducto } = useContext(PedidoContext);\r\n  console.log(agregarProducto);\r\n  const { data, loading, error } = useQuery(OBTENER_PRODUCTOS);\r\n  console.log(loading);\r\n  console.log(error);\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    console.log(productos);\r\n  }, [cliente]);\r\n\r\n  const seleccionarProductos = (productos) => {\r\n    setProductos(productos);\r\n  };\r\n\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  const obtenerProductos = data?.obtenerProductos;\r\n\r\n  return (\r\n    <>\r\n      <p className=\"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\">\r\n        1.- Asigna un Cliente al pedido\r\n      </p>\r\n\r\n      <Select\r\n        className=\"mt-3\"\r\n        isMulti={true}\r\n        // options={obtenerClientesVendedor}\r\n        onChange={(opc) => seleccionarCliente(opc)}\r\n        getOptionValue={(opc) => opc.id}\r\n        getOptionLabel={(opc) => opc.nombre}\r\n        placeholder=\"Seleccionar Cliente\"\r\n        noOptionsMessage={() => 'No hay resultados'}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}