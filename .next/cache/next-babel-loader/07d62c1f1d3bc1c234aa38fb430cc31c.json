{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../component/Layout';\nimport { useQuery } from '@apollo/client';\nimport { OBTENER_CLIENTES_VENDEDOR } from '../graphql/clientes';\nimport { useRouter } from 'next/router';\nimport Cliente from '../component/Cliente';\n\nvar Index = function Index() {\n  _s();\n\n  var _useQuery = useQuery(OBTENER_CLIENTES_VENDEDOR),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var router = useRouter();\n  if (loading) return 'Cargando...';\n  if (error) return \"Error || \".concat(error.message);\n  if (!data.obtenerClientesVendedor) return router.push('/login');\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Clientes\"), __jsx(Link, {\n    href: \"/nuevocliente\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    className: \"bg-blue-800 py-2 px-5 mt-3 inline-block text-white rounded text-sm hover:bg-gray-800 mb-3 uppercase font-bold w-full lg:w-auto text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Nuevo Cliente\")), __jsx(\"div\", {\n    className: \"overflow-x-scroll\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"table\", {\n    className: \"table-auto shadow-md mt-10 w-full w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(\"thead\", {\n    className: \"bg-gray-800\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(\"tr\", {\n    className: \"text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, \"Nombre\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"Empresa\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Email\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"Eliminar\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"Editar\"))), __jsx(\"tbody\", {\n    className: \"bg-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, data.obtenerClientesVendedor.map(function (cliente) {\n    return __jsx(Cliente, {\n      key: cliente.id,\n      cliente: cliente,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    });\n  })))));\n};\n\n_s(Index, \"O/g4p4AM2YfhF8WmLmH6gKG/qKY=\", false, function () {\n  return [useQuery, useRouter];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/index.js"],"names":["Link","Layout","useQuery","OBTENER_CLIENTES_VENDEDOR","useRouter","Cliente","Index","data","loading","error","router","message","obtenerClientesVendedor","push","map","cliente","id"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,yBAAT,QAA0C,qBAA1C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,kBACeJ,QAAQ,CAACC,yBAAD,CADvB;AAAA,MACVI,IADU,aACVA,IADU;AAAA,MACJC,OADI,aACJA,OADI;AAAA,MACKC,KADL,aACKA,KADL;;AAElB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,MAAII,OAAJ,EAAa,OAAO,aAAP;AACb,MAAIC,KAAJ,EAAW,0BAAmBA,KAAK,CAACE,OAAzB;AACX,MAAI,CAACJ,IAAI,CAACK,uBAAV,EAAmC,OAAOF,MAAM,CAACG,IAAP,CAAY,QAAZ,CAAP;AAEnC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,4IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAHF,EASE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,wCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,CADF,EAWE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACK,uBAAL,CAA6BE,GAA7B,CAAiC,UAACC,OAAD;AAAA,WAChC,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAtB;AAA0B,MAAA,OAAO,EAAED,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgC;AAAA,GAAjC,CADH,CAXF,CADF,CATF,CADF;AA+BD,CAvCD;;GAAMT,K;UAC6BJ,Q,EAClBE,S;;;KAFXE,K;AAyCN,eAAeA,KAAf","sourcesContent":["import Link from 'next/link';\nimport Layout from '../component/Layout';\nimport { useQuery } from '@apollo/client';\nimport { OBTENER_CLIENTES_VENDEDOR } from '../graphql/clientes';\nimport { useRouter } from 'next/router';\nimport Cliente from '../component/Cliente';\n\nconst Index = () => {\n  const { data, loading, error } = useQuery(OBTENER_CLIENTES_VENDEDOR);\n  const router = useRouter();\n\n  if (loading) return 'Cargando...';\n  if (error) return `Error || ${error.message}`;\n  if (!data.obtenerClientesVendedor) return router.push('/login');\n\n  return (\n    <Layout>\n      <h1 className=\"text-2xl text-gray-800 font-light\">Clientes</h1>\n\n      <Link href=\"/nuevocliente\">\n        <a className=\"bg-blue-800 py-2 px-5 mt-3 inline-block text-white rounded text-sm hover:bg-gray-800 mb-3 uppercase font-bold w-full lg:w-auto text-center\">\n          Nuevo Cliente\n        </a>\n      </Link>\n\n      <div className=\"overflow-x-scroll\">\n        <table className=\"table-auto shadow-md mt-10 w-full w-lg\">\n          <thead className=\"bg-gray-800\">\n            <tr className=\"text-white\">\n              <th className=\"w-1/5 py-2\">Nombre</th>\n              <th className=\"w-1/5 py-2\">Empresa</th>\n              <th className=\"w-1/5 py-2\">Email</th>\n              <th className=\"w-1/5 py-2\">Eliminar</th>\n              <th className=\"w-1/5 py-2\">Editar</th>\n            </tr>\n          </thead>\n\n          <tbody className=\"bg-white\">\n            {data.obtenerClientesVendedor.map((cliente) => (\n              <Cliente key={cliente.id} cliente={cliente} />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}