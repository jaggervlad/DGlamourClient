{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\editarproducto\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../component/Layout';\nimport { useRouter } from 'next/router';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Swal from 'sweetalert2';\nimport { OBTENER_PRODUCTO, ACTUALIZAR_PRODUCTO } from '../../graphql/productos';\nexport default function EditarProducto() {\n  const router = useRouter();\n  const id = router.query.id;\n  const {\n    data\n  } = useQuery(OBTENER_PRODUCTO, {\n    variables: {\n      id\n    }\n  });\n  const {\n    obtenerProducto\n  } = data;\n  const [actualizarProducto] = useMutation(ACTUALIZAR_PRODUCTO);\n  const initialValues = {\n    obtenerProducto\n  };\n  const validationSchema = Yup.object().shape({\n    nombre: Yup.string().required('Este campo es obligatorio'),\n    existencia: Yup.number().required('Este campo es obligatorio').positive('No se aceptan números negativos').integer('La existencia deben ser números enteros'),\n    precio: Yup.number().required('Este campo es obligatorio').positive('No se aceptan números negativos')\n  });\n  const formik = useFormik({\n    enableReinitialize,\n    initialValues,\n    validationSchema,\n    onSubmit: async (values, helpers) => {\n      console.log(values);\n      const {\n        nombre,\n        existencia,\n        precio\n      } = values;\n\n      try {\n        const input = {\n          nombre,\n          existencia,\n          precio\n        };\n        await actualizarProducto({\n          variables: {\n            id,\n            input\n          }\n        });\n        helpers.setSubmitting(false);\n        router.push('/productos');\n        Swal.fire('Correcto', 'El producto se actualió correctamente', 'success');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Editar Producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Producto\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"existencia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Cantidad Disponible\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"existencia\",\n    type: \"number\",\n    placeholder: \"Cantidad Disponible\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.existencia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  })), formik.touched.existencia && formik.errors.existencia ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, formik.errors.existencia)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"precio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Precio\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"precio\",\n    type: \"number\",\n    placeholder: \"Precio Producto\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.precio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  })), formik.touched.precio && formik.errors.precio ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, formik.errors.precio)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Guardar Cambios\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/editarproducto/[id].js"],"names":["Layout","useRouter","useMutation","useQuery","useFormik","Yup","Swal","OBTENER_PRODUCTO","ACTUALIZAR_PRODUCTO","EditarProducto","router","id","query","data","variables","obtenerProducto","actualizarProducto","initialValues","validationSchema","object","shape","nombre","string","required","existencia","number","positive","integer","precio","formik","enableReinitialize","onSubmit","values","helpers","console","log","input","setSubmitting","push","fire","error","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import Layout from '../../component/Layout';\r\nimport { useRouter } from 'next/router';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\nimport { OBTENER_PRODUCTO, ACTUALIZAR_PRODUCTO } from '../../graphql/productos';\r\n\r\nexport default function EditarProducto() {\r\n  const router = useRouter();\r\n  const id = router.query.id;\r\n  const { data } = useQuery(OBTENER_PRODUCTO, {\r\n    variables: { id },\r\n  });\r\n  const { obtenerProducto } = data;\r\n  const [actualizarProducto] = useMutation(ACTUALIZAR_PRODUCTO);\r\n\r\n  const initialValues = { obtenerProducto };\r\n  const validationSchema = Yup.object().shape({\r\n    nombre: Yup.string().required('Este campo es obligatorio'),\r\n    existencia: Yup.number()\r\n      .required('Este campo es obligatorio')\r\n      .positive('No se aceptan números negativos')\r\n      .integer('La existencia deben ser números enteros'),\r\n    precio: Yup.number()\r\n      .required('Este campo es obligatorio')\r\n      .positive('No se aceptan números negativos'),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize,\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (values, helpers) => {\r\n      console.log(values);\r\n      const { nombre, existencia, precio } = values;\r\n      try {\r\n        const input = { nombre, existencia, precio };\r\n        await actualizarProducto({\r\n          variables: { id, input },\r\n        });\r\n        helpers.setSubmitting(false);\r\n        router.push('/productos');\r\n        Swal.fire(\r\n          'Correcto',\r\n          'El producto se actualió correctamente',\r\n          'success'\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-2xl text-gray-800 font-light\">Editar Producto</h1>\r\n\r\n      <div className=\"flex justify-center mt-5\">\r\n        <div className=\"w-full max-w-lg\">\r\n          <form\r\n            className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\"\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <div className=\"mb-4\">\r\n              <label\r\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                htmlFor=\"nombre\"\r\n              >\r\n                Nombre\r\n              </label>\r\n\r\n              <input\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"nombre\"\r\n                type=\"text\"\r\n                placeholder=\"Nombre Producto\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.nombre}\r\n              />\r\n            </div>\r\n\r\n            {formik.touched.nombre && formik.errors.nombre ? (\r\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                <p className=\"font-bold\">Error</p>\r\n                <p>{formik.errors.nombre}</p>\r\n              </div>\r\n            ) : null}\r\n\r\n            <div className=\"mb-4\">\r\n              <label\r\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                htmlFor=\"existencia\"\r\n              >\r\n                Cantidad Disponible\r\n              </label>\r\n\r\n              <input\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"existencia\"\r\n                type=\"number\"\r\n                placeholder=\"Cantidad Disponible\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.existencia}\r\n              />\r\n            </div>\r\n\r\n            {formik.touched.existencia && formik.errors.existencia ? (\r\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                <p className=\"font-bold\">Error</p>\r\n                <p>{formik.errors.existencia}</p>\r\n              </div>\r\n            ) : null}\r\n\r\n            <div className=\"mb-4\">\r\n              <label\r\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                htmlFor=\"precio\"\r\n              >\r\n                Precio\r\n              </label>\r\n\r\n              <input\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"precio\"\r\n                type=\"number\"\r\n                placeholder=\"Precio Producto\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.precio}\r\n              />\r\n            </div>\r\n\r\n            {formik.touched.precio && formik.errors.precio ? (\r\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                <p className=\"font-bold\">Error</p>\r\n                <p>{formik.errors.precio}</p>\r\n              </div>\r\n            ) : null}\r\n\r\n            <input\r\n              type=\"submit\"\r\n              className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\r\n              value=\"Guardar Cambios\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}