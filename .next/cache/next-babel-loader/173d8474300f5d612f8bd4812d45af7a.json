{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\editarcategoria\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../component/Layout';\nimport { useFormik, Formik } from 'formik';\nimport { initialValues, validationSchema } from '../../schemas/categorias';\nimport { useMutation, useQuery } from '@apollo/client';\nimport Swal from 'sweetalert2';\nimport { useRouter } from 'next/router';\nimport { OBTENER_CATEGORIA, ACTUALIZAR_CATEGORIA } from '../../graphql/categorias';\nexport default function NuevoProducto() {\n  const router = useRouter();\n  const id = router.query.id;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_CATEGORIA, {\n    variables: {\n      id\n    }\n  });\n  const obtenerCategoria = data === null || data === void 0 ? void 0 : data.obtenerCategoria;\n  const [actualizarCategoria] = useMutation(ACTUALIZAR_CATEGORIA);\n  if (loading || !data) return 'Cargando...';\n  if (error) return `Error ${error.message}`;\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light text-center mt-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Crear Nueva Categoria\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Formik, {\n    enableReinitialize: true,\n    initialValues: obtenerCategoria,\n    validationSchema: validationSchema,\n    onSubmit: async (values, helpers) => {\n      const {\n        nombre\n      } = values;\n      const input = {\n        nombre\n      };\n\n      try {\n        await actualizarCategoria({\n          variables: {\n            id,\n            input\n          }\n        });\n        helpers.setSubmitting(false);\n        router.push('/categorias');\n        Swal.fire('Correct', 'La categoria se actualizo correctamente', 'success');\n      } catch (error) {\n        const errorMessage = error.message.replace('Graphql error: ', '');\n        Swal.fire('Error', errorMessage, 'error');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, ({\n    values,\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    touched,\n    isSubmitting,\n    dirty\n  }) => __jsx(\"form\", {\n    className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4 \",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Producto\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  })), touched.nombre && errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, errors.nombre)) : null, __jsx(\"input\", {\n    disabled: isSubmitting || !dirty,\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"enviar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/editarcategoria/[id].js"],"names":["Layout","useFormik","Formik","initialValues","validationSchema","useMutation","useQuery","Swal","useRouter","OBTENER_CATEGORIA","ACTUALIZAR_CATEGORIA","NuevoProducto","router","id","query","data","loading","error","variables","obtenerCategoria","actualizarCategoria","message","values","helpers","nombre","input","setSubmitting","push","fire","errorMessage","replace","errors","handleBlur","handleChange","handleSubmit","touched","isSubmitting","dirty"],"mappings":"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","sourcesContent":["import Layout from '../../component/Layout';\r\nimport { useFormik, Formik } from 'formik';\r\nimport { initialValues, validationSchema } from '../../schemas/categorias';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport Swal from 'sweetalert2';\r\nimport { useRouter } from 'next/router';\r\nimport {\r\n  OBTENER_CATEGORIA,\r\n  ACTUALIZAR_CATEGORIA,\r\n} from '../../graphql/categorias';\r\n\r\nexport default function NuevoProducto() {\r\n  const router = useRouter();\r\n  const id = router.query.id;\r\n  const { data, loading, error } = useQuery(OBTENER_CATEGORIA, {\r\n    variables: { id },\r\n  });\r\n  const obtenerCategoria = data?.obtenerCategoria;\r\n  const [actualizarCategoria] = useMutation(ACTUALIZAR_CATEGORIA);\r\n\r\n  if (loading || !data) return 'Cargando...';\r\n  if (error) return `Error ${error.message}`;\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-2xl text-gray-800 font-light text-center mt-8\">\r\n        Crear Nueva Categoria\r\n      </h1>\r\n\r\n      <div className=\"flex justify-center mt-5\">\r\n        <div className=\"w-full max-w-lg\">\r\n          <Formik\r\n            enableReinitialize\r\n            initialValues={obtenerCategoria}\r\n            validationSchema={validationSchema}\r\n            onSubmit={async (values, helpers) => {\r\n              const { nombre } = values;\r\n              const input = { nombre };\r\n              try {\r\n                await actualizarCategoria({ variables: { id, input } });\r\n                helpers.setSubmitting(false);\r\n                router.push('/categorias');\r\n                Swal.fire(\r\n                  'Correct',\r\n                  'La categoria se actualizo correctamente',\r\n                  'success'\r\n                );\r\n              } catch (error) {\r\n                const errorMessage = error.message.replace(\r\n                  'Graphql error: ',\r\n                  ''\r\n                );\r\n                Swal.fire('Error', errorMessage, 'error');\r\n              }\r\n            }}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              touched,\r\n              isSubmitting,\r\n              dirty,\r\n            }) => (\r\n              <form\r\n                className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4 \"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <div className=\"mb-4\">\r\n                  <label\r\n                    className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                    htmlFor=\"nombre\"\r\n                  >\r\n                    Nombre\r\n                  </label>\r\n\r\n                  <input\r\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                    id=\"nombre\"\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre Producto\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.nombre}\r\n                  />\r\n                </div>\r\n\r\n                {touched.nombre && errors.nombre ? (\r\n                  <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                    <p className=\"font-bold\">Error</p>\r\n                    <p>{errors.nombre}</p>\r\n                  </div>\r\n                ) : null}\r\n\r\n                <input\r\n                  disabled={isSubmitting || !dirty}\r\n                  type=\"submit\"\r\n                  className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\r\n                  value=\"enviar\"\r\n                />\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}