{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\nuevopedido.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport PedidoContext from '../context/pedidos/PedidoContex'; // Components\n\nimport Swal from 'sweetalert2';\nimport AsignarCliente from '../component/pedidos/AsignarCliente';\nimport AsignarProductos from '../component/pedidos/AsignarProductos';\nimport ResumenPedido from '../component/pedidos/ResumenPedido';\nimport Layout from '../component/Layout';\nimport Total from '../component/pedidos/Total'; // Graphql\n\nimport { useMutation } from '@apollo/client';\nimport { useMessage } from '../hooks/useMessage';\nimport { NUEVO_PEDIDO, OBTENER_PEDIDOS } from '../graphql/pedidos';\nexport default function NuevoPedido() {\n  const router = useRouter();\n  const [mensaje, guardarMensaje, mostrarMensaje] = useMessage();\n  const pedidoContext = useContext(PedidoContext);\n  const {\n    cliente,\n    productos,\n    total\n  } = pedidoContext;\n  const [nuevoPedido] = useMutation(NUEVO_PEDIDO, {\n    update(cache, {\n      data: {\n        nuevoPedido\n      }\n    }) {\n      const {\n        obternerPedidosVendedor\n      } = cache.readQuery({\n        query: OBTENER_PEDIDOS\n      });\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obternerPedidosVendedor: [...obternerPedidosVendedor, nuevoPedido]\n        }\n      });\n    }\n\n  });\n  const {\n    id\n  } = cliente;\n  const pedido = productos.map((_ref) => {\n    let {\n      __typename,\n      existencia\n    } = _ref,\n        productos = _objectWithoutProperties(_ref, [\"__typename\", \"existencia\"]);\n\n    return productos;\n  });\n\n  const newOrder = async () => {\n    try {\n      const input = {\n        pedido,\n        cliente: id,\n        total\n      };\n      await nuevoPedido({\n        variables: {\n          input\n        }\n      });\n      router.push('/pedidos');\n      Swal.fire('Correcto', 'El pedido se registrÃ³ correctamente', 'success');\n    } catch (error) {\n      guardarMensaje(error.message.replace('GraphQL error: ', ''));\n      setTimeout(() => {\n        guardarMensaje(null);\n      }, 3000);\n    }\n  };\n\n  const validarPedido = () => {\n    return !(productos === null || productos === void 0 ? void 0 : productos.every(producto => producto.cantidad > 0)) || total === 0 || cliente.length === 0 ? ' opacity-50 cursor-not-allowed ' : '';\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-center text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Crear Nuevo Pedido\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(AsignarCliente, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), __jsx(AsignarProductos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), __jsx(ResumenPedido, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), __jsx(Total, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: ` bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 ${validarPedido()} `,\n    onClick: () => newOrder(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Registrar Pedido\"))));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/nuevopedido.js"],"names":["React","useContext","useRouter","PedidoContext","Swal","AsignarCliente","AsignarProductos","ResumenPedido","Layout","Total","useMutation","useMessage","NUEVO_PEDIDO","OBTENER_PEDIDOS","NuevoPedido","router","mensaje","guardarMensaje","mostrarMensaje","pedidoContext","cliente","productos","total","nuevoPedido","update","cache","data","obternerPedidosVendedor","readQuery","query","writeQuery","id","pedido","map","__typename","existencia","newOrder","input","variables","push","fire","error","message","replace","setTimeout","validarPedido","every","producto","cantidad","length"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport PedidoContext from '../context/pedidos/PedidoContex';\r\n// Components\r\nimport Swal from 'sweetalert2';\r\nimport AsignarCliente from '../component/pedidos/AsignarCliente';\r\nimport AsignarProductos from '../component/pedidos/AsignarProductos';\r\nimport ResumenPedido from '../component/pedidos/ResumenPedido';\r\nimport Layout from '../component/Layout';\r\nimport Total from '../component/pedidos/Total';\r\n// Graphql\r\nimport { useMutation } from '@apollo/client';\r\nimport { useMessage } from '../hooks/useMessage';\r\nimport { NUEVO_PEDIDO, OBTENER_PEDIDOS } from '../graphql/pedidos';\r\n\r\nexport default function NuevoPedido() {\r\n  const router = useRouter();\r\n  const [mensaje, guardarMensaje, mostrarMensaje] = useMessage();\r\n  const pedidoContext = useContext(PedidoContext);\r\n  const { cliente, productos, total } = pedidoContext;\r\n  const [nuevoPedido] = useMutation(NUEVO_PEDIDO, {\r\n    update(cache, { data: { nuevoPedido } }) {\r\n      const { obternerPedidosVendedor } = cache.readQuery({\r\n        query: OBTENER_PEDIDOS,\r\n      });\r\n\r\n      cache.writeQuery({\r\n        query: OBTENER_PEDIDOS,\r\n        data: {\r\n          obternerPedidosVendedor: [...obternerPedidosVendedor, nuevoPedido],\r\n        },\r\n      });\r\n    },\r\n  });\r\n  const { id } = cliente;\r\n  const pedido = productos.map(\r\n    ({ __typename, existencia, ...productos }) => productos\r\n  );\r\n\r\n  const newOrder = async () => {\r\n    try {\r\n      const input = { pedido, cliente: id, total };\r\n      await nuevoPedido({ variables: { input } });\r\n\r\n      router.push('/pedidos');\r\n      Swal.fire('Correcto', 'El pedido se registrÃ³ correctamente', 'success');\r\n    } catch (error) {\r\n      guardarMensaje(error.message.replace('GraphQL error: ', ''));\r\n\r\n      setTimeout(() => {\r\n        guardarMensaje(null);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const validarPedido = () => {\r\n    return !productos?.every((producto) => producto.cantidad > 0) ||\r\n      total === 0 ||\r\n      cliente.length === 0\r\n      ? ' opacity-50 cursor-not-allowed '\r\n      : '';\r\n  };\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-center text-2xl text-gray-800 font-light\">\r\n        Crear Nuevo Pedido\r\n      </h1>\r\n\r\n      {mensaje && mostrarMensaje()}\r\n\r\n      <div className=\"flex justify-center mt-5\">\r\n        <div className=\"w-full max-w-lg\">\r\n          <AsignarCliente />\r\n          <AsignarProductos />\r\n          <ResumenPedido />\r\n          <Total />\r\n\r\n          <button\r\n            type=\"button\"\r\n            className={` bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 ${validarPedido()} `}\r\n            onClick={() => newOrder()}\r\n          >\r\n            Registrar Pedido\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}