{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\component\\\\NuevaCuenta.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from './Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useMutation } from '@apollo/client';\nimport { useMessage } from '../hooks/useMessage';\nimport { NUEVA_CUENTA } from '../graphql/usuarios';\n\nvar NuevaCuenta = function NuevaCuenta() {\n  _s();\n\n  var router = useRouter();\n\n  var _useMessage = useMessage(),\n      _useMessage2 = _slicedToArray(_useMessage, 3),\n      mensaje = _useMessage2[0],\n      guardarMensaje = _useMessage2[1],\n      mostrarMensaje = _useMessage2[2];\n\n  var _useMutation = useMutation(NUEVA_CUENTA),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoUsuario = _useMutation2[0];\n\n  var roles = [{\n    label: 'USUARIO'\n  }, {\n    label: 'ADMINISTRADOR'\n  }];\n  var formik = useFormik({\n    initialValues: {\n      nombre: '',\n      username: '',\n      password: '',\n      rol: ''\n    },\n    validationSchema: Yup.object().shape({\n      nombre: Yup.string().required('Este campo es obligatorio'),\n      username: Yup.string().required('Este campo es obligatorio'),\n      password: Yup.string().required('Este campo es obligatorio'),\n      rol: Yup.string().required('Este campo es obligatorio')\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, herlpers) {\n        var nombre, username, password, rol, input, _yield$nuevoUsuario, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                nombre = values.nombre, username = values.username, password = values.password, rol = values.rol;\n                input = {\n                  nombre: nombre,\n                  username: username,\n                  password: password,\n                  rol: rol\n                };\n                _context.prev = 2;\n                _context.next = 5;\n                return nuevoUsuario({\n                  variables: {\n                    input: input\n                  }\n                });\n\n              case 5:\n                _yield$nuevoUsuario = _context.sent;\n                data = _yield$nuevoUsuario.data;\n                guardarMensaje(\"Se creo correctamente el Usuario: \".concat(data.nuevoUsuario.nombre, \" \"));\n                setTimeout(function () {\n                  guardarMensaje(null);\n                  herlpers.setSubmitting(false);\n                  router.push('/login');\n                }, 2000);\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                guardarMensaje(_context.t0.message.replace('GraphQL error: ', ''));\n                setTimeout(function () {\n                  guardarMensaje(null);\n                }, 3000);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, mensaje && mostrarMensaje(), __jsx(\"h1\", {\n    className: \"text-center text-2xl text-white font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Crear Nueva Cuenta\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Nombre Completo\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    value: formik.values.nombre,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Nombre de Usuario\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"username\",\n    type: \"text\",\n    value: formik.values.username,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })), formik.touched.username && formik.errors.username ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, formik.errors.username)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Contrase\\xF1a\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    type: \"password\",\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  })), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, formik.errors.password)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"rol\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Rol de Usuario\"), __jsx(\"select\", {\n    name: \"rol\",\n    className: \"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n    id: \"rol\",\n    value: formik.values.rol,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    lable: \"Selecciona Rol\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }), roles.map(function (role, index) {\n    return __jsx(\"option\", {\n      value: role,\n      lable: role,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    });\n  }))), formik.touched.rol && formik.errors.rol ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, formik.errors.rol)) : null, __jsx(\"input\", {\n    disabled: formik.isSubmitting || !formik.dirty,\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercas hover:cursor-pointer hover:bg-gray-900\",\n    value: \"Crear Cuenta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  })), __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, JSON.stringify(formik.values, null, 2)), __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, JSON.stringify(formik.errors, null, 2))))));\n};\n\n_s(NuevaCuenta, \"zvwMzRWd28lKEQP9auK85sysGvo=\", false, function () {\n  return [useRouter, useMessage, useMutation, useFormik];\n});\n\n_c = NuevaCuenta;\nexport default NuevaCuenta;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevaCuenta\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/component/NuevaCuenta.js"],"names":["React","useRouter","Layout","useFormik","Yup","useMutation","useMessage","NUEVA_CUENTA","NuevaCuenta","router","mensaje","guardarMensaje","mostrarMensaje","nuevoUsuario","roles","label","formik","initialValues","nombre","username","password","rol","validationSchema","object","shape","string","required","onSubmit","values","herlpers","input","variables","data","setTimeout","setSubmitting","push","message","replace","handleSubmit","handleChange","handleBlur","touched","errors","map","role","index","isSubmitting","dirty","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Layout from './Layout';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useMessage } from '../hooks/useMessage';\r\nimport { NUEVA_CUENTA } from '../graphql/usuarios';\r\n\r\nconst NuevaCuenta = () => {\r\n  const router = useRouter();\r\n  const [mensaje, guardarMensaje, mostrarMensaje] = useMessage();\r\n  const [nuevoUsuario] = useMutation(NUEVA_CUENTA);\r\n\r\n  const roles = [{ label: 'USUARIO' }, { label: 'ADMINISTRADOR' }];\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      nombre: '',\r\n      username: '',\r\n      password: '',\r\n      rol: '',\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      nombre: Yup.string().required('Este campo es obligatorio'),\r\n      username: Yup.string().required('Este campo es obligatorio'),\r\n      password: Yup.string().required('Este campo es obligatorio'),\r\n      rol: Yup.string().required('Este campo es obligatorio'),\r\n    }),\r\n    onSubmit: async (values, herlpers) => {\r\n      const { nombre, username, password, rol } = values;\r\n      const input = {\r\n        nombre,\r\n        username,\r\n        password,\r\n        rol,\r\n      };\r\n      try {\r\n        const { data } = await nuevoUsuario({\r\n          variables: { input },\r\n        });\r\n\r\n        guardarMensaje(\r\n          `Se creo correctamente el Usuario: ${data.nuevoUsuario.nombre} `\r\n        );\r\n\r\n        setTimeout(() => {\r\n          guardarMensaje(null);\r\n          herlpers.setSubmitting(false);\r\n          router.push('/login');\r\n        }, 2000);\r\n      } catch (error) {\r\n        guardarMensaje(error.message.replace('GraphQL error: ', ''));\r\n        setTimeout(() => {\r\n          guardarMensaje(null);\r\n        }, 3000);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        {mensaje && mostrarMensaje()}\r\n\r\n        <h1 className=\"text-center text-2xl text-white font-light\">\r\n          Crear Nueva Cuenta\r\n        </h1>\r\n\r\n        <div className=\"flex justify-center mt-5\">\r\n          <div className=\"w-full max-w-sm\">\r\n            <form\r\n              className=\"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\"\r\n              onSubmit={formik.handleSubmit}\r\n            >\r\n              <div className=\"mb-4\">\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"nombre\"\r\n                >\r\n                  Nombre Completo\r\n                </label>\r\n\r\n                <input\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  id=\"nombre\"\r\n                  type=\"text\"\r\n                  value={formik.values.nombre}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                />\r\n              </div>\r\n\r\n              {formik.touched.nombre && formik.errors.nombre ? (\r\n                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                  <p>{formik.errors.nombre}</p>\r\n                </div>\r\n              ) : null}\r\n\r\n              <div className=\"mb-4\">\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"username\"\r\n                >\r\n                  Nombre de Usuario\r\n                </label>\r\n\r\n                <input\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  value={formik.values.username}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                />\r\n              </div>\r\n\r\n              {formik.touched.username && formik.errors.username ? (\r\n                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                  <p>{formik.errors.username}</p>\r\n                </div>\r\n              ) : null}\r\n\r\n              <div className=\"mb-4\">\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"password\"\r\n                >\r\n                  Contraseña\r\n                </label>\r\n\r\n                <input\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                />\r\n              </div>\r\n\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                  <p>{formik.errors.password}</p>\r\n                </div>\r\n              ) : null}\r\n\r\n              <div className=\"mb-4\">\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"rol\"\r\n                >\r\n                  Rol de Usuario\r\n                </label>\r\n\r\n                <select\r\n                  name=\"rol\"\r\n                  className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n                  id=\"rol\"\r\n                  value={formik.values.rol}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                >\r\n                  <option value=\"\" lable=\"Selecciona Rol\" />\r\n                  {roles.map((role, index) => (\r\n                    <option value={role} lable={role} />\r\n                  ))}\r\n                  {/* <option value=\"\" label=\"Selecciona Rol\" />\r\n                  <option value=\"ADMINISTRADOR\" label=\"ADMINISTRADOR\" />\r\n                  <option value=\"USUARIO\" label=\"USUARIO\" /> */}\r\n                </select>\r\n              </div>\r\n\r\n              {formik.touched.rol && formik.errors.rol ? (\r\n                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                  <p>{formik.errors.rol}</p>\r\n                </div>\r\n              ) : null}\r\n\r\n              <input\r\n                disabled={formik.isSubmitting || !formik.dirty}\r\n                type=\"submit\"\r\n                className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercas hover:cursor-pointer hover:bg-gray-900\"\r\n                value=\"Crear Cuenta\"\r\n              />\r\n            </form>\r\n\r\n            <pre>{JSON.stringify(formik.values, null, 2)}</pre>\r\n            <pre>{JSON.stringify(formik.errors, null, 2)}</pre>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NuevaCuenta;\r\n"]},"metadata":{},"sourceType":"module"}