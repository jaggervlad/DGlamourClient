{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\productos.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Layout from '../component/Layout';\nimport Producto from '../component/Producto';\nimport { useQuery } from '@apollo/client';\nimport Link from 'next/link';\nimport { OBTENER_PRODUCTOS } from '../graphql/productos';\nexport default function Productos() {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_PRODUCTOS);\n  const {\n    0: value,\n    1: setValue\n  } = useState([]);\n  useEffect(() => {\n    setValue(data);\n  }, [data]);\n  productos = value;\n  if (loading) return 'Cargando....';\n  if (error) return `Error || ${error.message}`;\n  console.log(productos);\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Productos\"), __jsx(Link, {\n    href: \"/nuevoproducto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"bg-blue-800 py-2 px-5 mt-3 inline-block text-white hover:bg-gray-800 hover:text-gray-200 mb-3 rounded uppercase font-bold text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Nuevo Producto\")), __jsx(\"table\", {\n    className: \"table-auto shadow-md mt-10 w-full w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(\"thead\", {\n    className: \"bg-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, __jsx(\"tr\", {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"Nombre\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"Existencia\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"Precio\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"Categoria\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Marca\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"Eliminar\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, \"Editar\"))), __jsx(\"tbody\", {\n    className: \"bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, data.obtenerProductos.map(producto => __jsx(Producto, {\n    key: producto.id,\n    producto: producto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/productos.js"],"names":["useState","useEffect","Layout","Producto","useQuery","Link","OBTENER_PRODUCTOS","Productos","data","loading","error","value","setValue","productos","message","console","log","obtenerProductos","map","producto","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CAACE,iBAAD,CAAzC;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACJ,IAAD,CAAR;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAGAK,EAAAA,SAAS,GAAGF,KAAZ;AACA,MAAIF,OAAJ,EAAa,OAAO,cAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,YAAWA,KAAK,CAACI,OAAQ,EAAjC;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAGE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,mIAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAHF,EASE;AAAO,IAAA,SAAS,EAAC,wCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAKE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAME;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAOE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADF,CADF,EAaE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACS,gBAAL,CAAsBC,GAAtB,CAA2BC,QAAD,IACzB,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,QAAQ,EAAED,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAbF,CATF,CADF,CADF;AAiCD","sourcesContent":["import { useState, useEffect } from 'react';\nimport Layout from '../component/Layout';\nimport Producto from '../component/Producto';\nimport { useQuery } from '@apollo/client';\nimport Link from 'next/link';\nimport { OBTENER_PRODUCTOS } from '../graphql/productos';\n\nexport default function Productos() {\n  const { data, loading, error } = useQuery(OBTENER_PRODUCTOS);\n  const [value, setValue] = useState([]);\n  useEffect(() => {\n    setValue(data);\n  }, [data]);\n  productos = value;\n  if (loading) return 'Cargando....';\n  if (error) return `Error || ${error.message}`;\n  console.log(productos);\n\n  return (\n    <>\n      <Layout>\n        <h1 className=\"text-2xl text-gray-800 font-light\">Productos</h1>\n\n        <Link href=\"/nuevoproducto\">\n          <a className=\"bg-blue-800 py-2 px-5 mt-3 inline-block text-white hover:bg-gray-800 hover:text-gray-200 mb-3 rounded uppercase font-bold text-sm\">\n            Nuevo Producto\n          </a>\n        </Link>\n\n        <table className=\"table-auto shadow-md mt-10 w-full w-lg\">\n          <thead className=\"bg-gray-800\">\n            <tr className=\"text-white\">\n              <th className=\"w-1/5 py-2\">Nombre</th>\n              <th className=\"w-1/5 py-2\">Existencia</th>\n              <th className=\"w-1/5 py-2\">Precio</th>\n              <th className=\"w-1/5 py-2\">Categoria</th>\n              <th className=\"w-1/5 py-2\">Marca</th>\n              <th className=\"w-1/5 py-2\">Eliminar</th>\n              <th className=\"w-1/5 py-2\">Editar</th>\n            </tr>\n          </thead>\n\n          <tbody className=\"bg-white\">\n            {data.obtenerProductos.map((producto) => (\n              <Producto key={producto.id} producto={producto} />\n            ))}\n          </tbody>\n        </table>\n      </Layout>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}