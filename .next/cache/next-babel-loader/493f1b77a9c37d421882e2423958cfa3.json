{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\nuevacategoria.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../component/Layout';\nimport { useFormik } from 'formik';\nimport { initialValues, validationSchema } from '../schemas/categorias';\nimport { useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2';\nimport { useRouter } from 'next/router';\nimport { OBTENER_CATEGORIAS, NUEVA_CATEGORIA } from '../graphql/categorias';\nexport default function NuevoProducto() {\n  _s();\n\n  var router = useRouter();\n\n  var _useMutation = useMutation(NUEVA_CATEGORIA, {\n    update: function update(cache, _ref) {\n      var nuevaCategoria = _ref.data;\n\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_CATEGORIAS\n      }),\n          obtenerCategorias = _cache$readQuery.obtenerCategorias;\n\n      cache.writeQuery({\n        query: OBTENER_CATEGORIAS,\n        data: {\n          obtenerCategorias: [].concat(_toConsumableArray(obtenerCategorias), [nuevaCategoria])\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevaCategoria = _useMutation2[0];\n\n  var formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        var nombre, input, errorMessage;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                nombre = values.nombre;\n                _context.prev = 1;\n                input = {\n                  nombre: nombre\n                };\n                _context.next = 5;\n                return nuevaCategoria({\n                  variables: {\n                    input: input\n                  }\n                });\n\n              case 5:\n                Swal.fire('Creado', 'Categoria Creada', 'success');\n                helpers.setSubmitting(false);\n                router.push('/categorias');\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                errorMessage = _context.t0.message.replace('Graphql error: ', '');\n                Swal.fire('Error', errorMessage, 'error');\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 10]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light text-center mt-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Crear Nuevo Producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4 \",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Producto\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, formik.errors.nombre)) : null, __jsx(\"input\", {\n    disabled: formik.isSubmitting || !formik.dirty,\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Agregar Nuevo Producto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(NuevoProducto, \"Cd8GYzW+nlPgQFZDyDvaPty2cZw=\", false, function () {\n  return [useRouter, useMutation, useFormik];\n});\n\n_c = NuevoProducto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoProducto\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/nuevacategoria.js"],"names":["Layout","useFormik","initialValues","validationSchema","useMutation","Swal","useRouter","OBTENER_CATEGORIAS","NUEVA_CATEGORIA","NuevoProducto","router","update","cache","nuevaCategoria","data","readQuery","query","obtenerCategorias","writeQuery","formik","onSubmit","values","helpers","nombre","input","variables","fire","setSubmitting","push","errorMessage","message","replace","handleSubmit","handleChange","handleBlur","touched","errors","isSubmitting","dirty"],"mappings":"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","sourcesContent":["import Layout from '../component/Layout';\r\nimport { useFormik } from 'formik';\r\nimport { initialValues, validationSchema } from '../schemas/categorias';\r\nimport { useMutation } from '@apollo/client';\r\nimport Swal from 'sweetalert2';\r\nimport { useRouter } from 'next/router';\r\nimport { OBTENER_CATEGORIAS, NUEVA_CATEGORIA } from '../graphql/categorias';\r\n\r\nexport default function NuevoProducto() {\r\n  const router = useRouter();\r\n  const [nuevaCategoria] = useMutation(NUEVA_CATEGORIA, {\r\n    update(cache, { data: nuevaCategoria }) {\r\n      const { obtenerCategorias } = cache.readQuery({\r\n        query: OBTENER_CATEGORIAS,\r\n      });\r\n\r\n      cache.writeQuery({\r\n        query: OBTENER_CATEGORIAS,\r\n        data: {\r\n          obtenerCategorias: [...obtenerCategorias, nuevaCategoria],\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (values, helpers) => {\r\n      const { nombre } = values;\r\n      try {\r\n        const input = {\r\n          nombre,\r\n        };\r\n        await nuevaCategoria({ variables: { input } });\r\n\r\n        Swal.fire('Creado', 'Categoria Creada', 'success');\r\n        helpers.setSubmitting(false);\r\n        router.push('/categorias');\r\n      } catch (error) {\r\n        const errorMessage = error.message.replace('Graphql error: ', '');\r\n        Swal.fire('Error', errorMessage, 'error');\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-2xl text-gray-800 font-light text-center mt-8\">\r\n        Crear Nuevo Producto\r\n      </h1>\r\n\r\n      <div className=\"flex justify-center mt-5\">\r\n        <div className=\"w-full max-w-lg\">\r\n          <form\r\n            className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4 \"\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <div className=\"mb-4\">\r\n              <label\r\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                htmlFor=\"nombre\"\r\n              >\r\n                Nombre\r\n              </label>\r\n\r\n              <input\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"nombre\"\r\n                type=\"text\"\r\n                placeholder=\"Nombre Producto\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.nombre}\r\n              />\r\n            </div>\r\n\r\n            {formik.touched.nombre && formik.errors.nombre ? (\r\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                <p className=\"font-bold\">Error</p>\r\n                <p>{formik.errors.nombre}</p>\r\n              </div>\r\n            ) : null}\r\n\r\n            <input\r\n              disabled={formik.isSubmitting || !formik.dirty}\r\n              type=\"submit\"\r\n              className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\r\n              value=\"Agregar Nuevo Producto\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}