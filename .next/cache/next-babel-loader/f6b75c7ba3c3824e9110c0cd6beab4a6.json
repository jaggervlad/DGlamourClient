{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\editarcategoria\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../component/Layout';\nimport { useFormik, Formik } from 'formik';\nimport { initialValues, validationSchema } from '../schemas/categorias';\nimport { useMutation, useQuery } from '@apollo/client';\nimport Swal from 'sweetalert2';\nimport { useRouter } from 'next/router';\nimport { OBTENER_CATEGORIA, ACTUALIZAR_CATEGORIA } from '../../graphql/categorias';\nexport default function NuevoProducto() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useQuery = useQuery(OBTENER_CATEGORIA, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var obtenerCategoria = data === null || data === void 0 ? void 0 : data.obtenerCategoria;\n\n  var _useMutation = useMutation(ACTUALIZAR_CATEGORIA),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      actualizarCategoria = _useMutation2[0];\n\n  if (loading || !data) return 'Cargando...';\n  if (error) return \"Error \".concat(error.message);\n  var formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        var nombre, input, errorMessage;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                nombre = values.nombre;\n                _context.prev = 1;\n                input = {\n                  nombre: nombre\n                };\n                _context.next = 5;\n                return nuevaCategoria({\n                  variables: {\n                    input: input\n                  }\n                });\n\n              case 5:\n                Swal.fire('Creado', 'Categoria Creada', 'success');\n                helpers.setSubmitting(false);\n                router.push('/categorias');\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                errorMessage = _context.t0.message.replace('Graphql error: ', '');\n                Swal.fire('Error', errorMessage, 'error');\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 10]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light text-center mt-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Crear Nueva Categoria\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(Formik, {\n    enableReinitialize: true,\n    initialValues: obtenerCategoria,\n    validationSchema: validationSchema,\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, helpers) {\n        var nombre, input, errorMessage;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                nombre = values.nombre;\n                input = {\n                  nombre: nombre\n                };\n                _context2.prev = 2;\n                _context2.next = 5;\n                return actualizarCategoria({\n                  variables: {\n                    id: id,\n                    input: input\n                  }\n                });\n\n              case 5:\n                helpers.setSubmitting(false);\n                router.push('/categorias');\n                Swal.fire('Correct', 'La categoria se actualizo correctamente', 'success');\n                _context2.next = 14;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](2);\n                errorMessage = _context2.t0.message.replace('Graphql error: ', '');\n                Swal.fire('Error', errorMessage, 'error');\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 10]]);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        handleBlur = _ref2.handleBlur,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        touched = _ref2.touched,\n        isSubmitting = _ref2.isSubmitting,\n        dirty = _ref2.dirty;\n    return __jsx(\"form\", {\n      className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4 \",\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"nombre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, \"Nombre\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"nombre\",\n      type: \"text\",\n      placeholder: \"Nombre Producto\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.nombre,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    })), touched.nombre && errors.nombre ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, errors.nombre)) : null, __jsx(\"input\", {\n      disabled: isSubmitting || !dirty,\n      type: \"submit\",\n      className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n      value: \"enviar\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }));\n  }))));\n}\n\n_s(NuevoProducto, \"O4tl/L5isqnsc/0myc0NzU1CHjo=\", false, function () {\n  return [useRouter, useQuery, useMutation, useFormik];\n});\n\n_c = NuevoProducto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoProducto\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/editarcategoria/[id].js"],"names":["Layout","useFormik","Formik","initialValues","validationSchema","useMutation","useQuery","Swal","useRouter","OBTENER_CATEGORIA","ACTUALIZAR_CATEGORIA","NuevoProducto","router","id","query","variables","data","loading","error","obtenerCategoria","actualizarCategoria","message","formik","onSubmit","values","helpers","nombre","input","nuevaCategoria","fire","setSubmitting","push","errorMessage","replace","errors","handleBlur","handleChange","handleSubmit","touched","isSubmitting","dirty"],"mappings":"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","sourcesContent":["import Layout from '../../component/Layout';\r\nimport { useFormik, Formik } from 'formik';\r\nimport { initialValues, validationSchema } from '../schemas/categorias';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport Swal from 'sweetalert2';\r\nimport { useRouter } from 'next/router';\r\nimport {\r\n  OBTENER_CATEGORIA,\r\n  ACTUALIZAR_CATEGORIA,\r\n} from '../../graphql/categorias';\r\n\r\nexport default function NuevoProducto() {\r\n  const router = useRouter();\r\n  const id = router.query.id;\r\n  const { data, loading, error } = useQuery(OBTENER_CATEGORIA, {\r\n    variables: { id },\r\n  });\r\n  const obtenerCategoria = data?.obtenerCategoria;\r\n  const [actualizarCategoria] = useMutation(ACTUALIZAR_CATEGORIA);\r\n\r\n  if (loading || !data) return 'Cargando...';\r\n  if (error) return `Error ${error.message}`;\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (values, helpers) => {\r\n      const { nombre } = values;\r\n      try {\r\n        const input = {\r\n          nombre,\r\n        };\r\n        await nuevaCategoria({ variables: { input } });\r\n\r\n        Swal.fire('Creado', 'Categoria Creada', 'success');\r\n        helpers.setSubmitting(false);\r\n        router.push('/categorias');\r\n      } catch (error) {\r\n        const errorMessage = error.message.replace('Graphql error: ', '');\r\n        Swal.fire('Error', errorMessage, 'error');\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-2xl text-gray-800 font-light text-center mt-8\">\r\n        Crear Nueva Categoria\r\n      </h1>\r\n\r\n      <div className=\"flex justify-center mt-5\">\r\n        <div className=\"w-full max-w-lg\">\r\n          <Formik\r\n            enableReinitialize\r\n            initialValues={obtenerCategoria}\r\n            validationSchema={validationSchema}\r\n            onSubmit={async (values, helpers) => {\r\n              const { nombre } = values;\r\n              const input = { nombre };\r\n              try {\r\n                await actualizarCategoria({ variables: { id, input } });\r\n                helpers.setSubmitting(false);\r\n                router.push('/categorias');\r\n                Swal.fire(\r\n                  'Correct',\r\n                  'La categoria se actualizo correctamente',\r\n                  'success'\r\n                );\r\n              } catch (error) {\r\n                const errorMessage = error.message.replace(\r\n                  'Graphql error: ',\r\n                  ''\r\n                );\r\n                Swal.fire('Error', errorMessage, 'error');\r\n              }\r\n            }}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              touched,\r\n              isSubmitting,\r\n              dirty,\r\n            }) => (\r\n              <form\r\n                className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4 \"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <div className=\"mb-4\">\r\n                  <label\r\n                    className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                    htmlFor=\"nombre\"\r\n                  >\r\n                    Nombre\r\n                  </label>\r\n\r\n                  <input\r\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                    id=\"nombre\"\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre Producto\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.nombre}\r\n                  />\r\n                </div>\r\n\r\n                {touched.nombre && errors.nombre ? (\r\n                  <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                    <p className=\"font-bold\">Error</p>\r\n                    <p>{errors.nombre}</p>\r\n                  </div>\r\n                ) : null}\r\n\r\n                <input\r\n                  disabled={isSubmitting || !dirty}\r\n                  type=\"submit\"\r\n                  className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\r\n                  value=\"enviar\"\r\n                />\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}