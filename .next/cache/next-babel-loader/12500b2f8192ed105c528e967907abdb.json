{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\nuevopedido.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport PedidoContext from '../context/pedidos/PedidoContex'; // Components\n\nimport Swal from 'sweetalert2';\nimport AsignarCliente from '../component/pedidos/AsignarCliente';\nimport AsignarProductos from '../component/pedidos/AsignarProductos';\nimport ResumenPedido from '../component/pedidos/ResumenPedido';\nimport Layout from '../component/Layout';\nimport Total from '../component/pedidos/Total'; // Graphql\n\nimport { useMutation } from '@apollo/client';\nimport { useMessage } from '../hooks/useMessage';\nimport { NUEVO_PEDIDO, OBTENER_PEDIDOS } from '../graphql/pedidos';\nexport default function NuevoPedido() {\n  _s();\n\n  var router = useRouter();\n\n  var _useMessage = useMessage(),\n      _useMessage2 = _slicedToArray(_useMessage, 3),\n      mensaje = _useMessage2[0],\n      guardarMensaje = _useMessage2[1],\n      mostrarMensaje = _useMessage2[2];\n\n  var pedidoContext = useContext(PedidoContext);\n  var cliente = pedidoContext.cliente,\n      productos = pedidoContext.productos,\n      total = pedidoContext.total;\n\n  var _useMutation = useMutation(NUEVO_PEDIDO, {\n    update: function update(cache, _ref) {\n      var nuevoPedido = _ref.data;\n\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PEDIDOS\n      }),\n          obtenerPedidos = _cache$readQuery.obtenerPedidos;\n\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidos: [].concat(_toConsumableArray(obtenerPedidos), [nuevoPedido])\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoPedido = _useMutation2[0];\n\n  var id = cliente.id;\n  var pedido = productos.map(function (_ref2) {\n    var __typename = _ref2.__typename,\n        existencia = _ref2.existencia,\n        categoria = _ref2.categoria,\n        undMed = _ref2.undMed,\n        presentacion = _ref2.presentacion,\n        codigo = _ref2.codigo,\n        productos = _objectWithoutProperties(_ref2, [\"__typename\", \"existencia\", \"categoria\", \"undMed\", \"presentacion\", \"codigo\"]);\n\n    return productos;\n  });\n  console.log(cliente);\n\n  var newOrder = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var input;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              input = {\n                pedido: pedido,\n                cliente: id,\n                total: total\n              };\n              _context.next = 4;\n              return nuevoPedido({\n                variables: {\n                  input: input\n                }\n              });\n\n            case 4:\n              router.push('/pedidos');\n              Swal.fire('Correcto', 'El pedido se registrÃ³ correctamente', 'success');\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              guardarMensaje(_context.t0.message.replace('GraphQL error: ', ''));\n              setTimeout(function () {\n                guardarMensaje(null);\n              }, 3000);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function newOrder() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var validarPedido = function validarPedido() {\n    return !(productos === null || productos === void 0 ? void 0 : productos.every(function (producto) {\n      return producto.cantidad > 0;\n    })) || total === 0 || cliente.length === 0 ? ' opacity-50 cursor-not-allowed ' : '';\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-center text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Crear Nuevo Pedido\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(AsignarCliente, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), __jsx(AsignarProductos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), __jsx(ResumenPedido, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), __jsx(Total, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \" bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 \".concat(validarPedido(), \" \"),\n    onClick: function onClick() {\n      return newOrder();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Registrar Pedido\"))));\n}\n\n_s(NuevoPedido, \"rayJA+vBtM8S1gOYSOsa5yANFso=\", false, function () {\n  return [useRouter, useMessage, useMutation];\n});\n\n_c = NuevoPedido;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoPedido\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/nuevopedido.js"],"names":["React","useContext","useRouter","PedidoContext","Swal","AsignarCliente","AsignarProductos","ResumenPedido","Layout","Total","useMutation","useMessage","NUEVO_PEDIDO","OBTENER_PEDIDOS","NuevoPedido","router","mensaje","guardarMensaje","mostrarMensaje","pedidoContext","cliente","productos","total","update","cache","nuevoPedido","data","readQuery","query","obtenerPedidos","writeQuery","id","pedido","map","__typename","existencia","categoria","undMed","presentacion","codigo","console","log","newOrder","input","variables","push","fire","message","replace","setTimeout","validarPedido","every","producto","cantidad","length"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport PedidoContext from '../context/pedidos/PedidoContex';\r\n// Components\r\nimport Swal from 'sweetalert2';\r\nimport AsignarCliente from '../component/pedidos/AsignarCliente';\r\nimport AsignarProductos from '../component/pedidos/AsignarProductos';\r\nimport ResumenPedido from '../component/pedidos/ResumenPedido';\r\nimport Layout from '../component/Layout';\r\nimport Total from '../component/pedidos/Total';\r\n// Graphql\r\nimport { useMutation } from '@apollo/client';\r\nimport { useMessage } from '../hooks/useMessage';\r\nimport { NUEVO_PEDIDO, OBTENER_PEDIDOS } from '../graphql/pedidos';\r\n\r\nexport default function NuevoPedido() {\r\n  const router = useRouter();\r\n  const [mensaje, guardarMensaje, mostrarMensaje] = useMessage();\r\n  const pedidoContext = useContext(PedidoContext);\r\n  const { cliente, productos, total } = pedidoContext;\r\n  const [nuevoPedido] = useMutation(NUEVO_PEDIDO, {\r\n    update(cache, { data: nuevoPedido }) {\r\n      const { obtenerPedidos } = cache.readQuery({\r\n        query: OBTENER_PEDIDOS,\r\n      });\r\n\r\n      cache.writeQuery({\r\n        query: OBTENER_PEDIDOS,\r\n        data: {\r\n          obtenerPedidos: [...obtenerPedidos, nuevoPedido],\r\n        },\r\n      });\r\n    },\r\n  });\r\n  const { id } = cliente;\r\n  const pedido = productos.map(\r\n    ({\r\n      __typename,\r\n      existencia,\r\n      categoria,\r\n      undMed,\r\n      presentacion,\r\n      codigo,\r\n      ...productos\r\n    }) => productos\r\n  );\r\n\r\n  console.log(cliente);\r\n  const newOrder = async () => {\r\n    try {\r\n      const input = { pedido, cliente: id, total };\r\n      await nuevoPedido({ variables: { input } });\r\n\r\n      router.push('/pedidos');\r\n      Swal.fire('Correcto', 'El pedido se registrÃ³ correctamente', 'success');\r\n    } catch (error) {\r\n      guardarMensaje(error.message.replace('GraphQL error: ', ''));\r\n\r\n      setTimeout(() => {\r\n        guardarMensaje(null);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const validarPedido = () => {\r\n    return !productos?.every((producto) => producto.cantidad > 0) ||\r\n      total === 0 ||\r\n      cliente.length === 0\r\n      ? ' opacity-50 cursor-not-allowed '\r\n      : '';\r\n  };\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-center text-2xl text-gray-800 font-light\">\r\n        Crear Nuevo Pedido\r\n      </h1>\r\n\r\n      {mensaje && mostrarMensaje()}\r\n\r\n      <div className=\"flex justify-center mt-5\">\r\n        <div className=\"w-full max-w-lg\">\r\n          <AsignarCliente />\r\n          <AsignarProductos />\r\n          <ResumenPedido />\r\n          <Total />\r\n\r\n          <button\r\n            type=\"button\"\r\n            className={` bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 ${validarPedido()} `}\r\n            onClick={() => newOrder()}\r\n          >\r\n            Registrar Pedido\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}