{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ACTUALIZAR_PEDIDO, ELIMINAR_PEDIDO, OBTENER_PEDIDOS_SINGLE } from '../../graphql/pedidos';\nexport default function Pedido({\n  pedido\n}) {\n  const {\n    id,\n    total,\n    cliente: {\n      nombre,\n      telefono,\n      email\n    },\n    estado,\n    cliente\n  } = pedido;\n  const [actualizarPedido] = useMutation(ACTUALIZAR_PEDIDO);\n  const [eliminarPedido] = useMutation(ELIMINAR_PEDIDO, {\n    update(cache) {\n      const {\n        obtenerPedidosVendedor\n      } = cache.readQuery({\n        query: OBTENER_PEDIDOS_SINGLE\n      });\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS_SINGLE,\n        data: {\n          obtenerPedidosVendedor: obtenerPedidosVendedor.filter(pedido => pedido.id !== id)\n        }\n      });\n    }\n\n  });\n  const {\n    0: estadoPedido,\n    1: setEstadoPedido\n  } = useState(estado);\n  const {\n    0: clase,\n    1: setClase\n  } = useState('');\n  useEffect(() => {\n    if (estadoPedido) {\n      setEstadoPedido(estadoPedido);\n    }\n\n    clasePedido();\n  }, [estadoPedido]);\n\n  const clasePedido = () => {\n    if (estadoPedido === 'PENDIENTE') {\n      setClase('border-yellow-500');\n    }\n  };\n\n  return 'Desde Pedido';\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/component/pedidos/Pedido.js"],"names":["React","useState","useEffect","useMutation","ACTUALIZAR_PEDIDO","ELIMINAR_PEDIDO","OBTENER_PEDIDOS_SINGLE","Pedido","pedido","id","total","cliente","nombre","telefono","email","estado","actualizarPedido","eliminarPedido","update","cache","obtenerPedidosVendedor","readQuery","query","writeQuery","data","filter","estadoPedido","setEstadoPedido","clase","setClase","clasePedido"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SACEC,iBADF,EAEEC,eAFF,EAGEC,sBAHF,QAIO,uBAJP;AAMA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA4B;AACzC,QAAM;AACJC,IAAAA,EADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,KAHL;AAIJC,IAAAA,MAJI;AAKJJ,IAAAA;AALI,MAMFH,MANJ;AAOA,QAAM,CAACQ,gBAAD,IAAqBb,WAAW,CAACC,iBAAD,CAAtC;AACA,QAAM,CAACa,cAAD,IAAmBd,WAAW,CAACE,eAAD,EAAkB;AACpDa,IAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,YAAM;AAAEC,QAAAA;AAAF,UAA6BD,KAAK,CAACE,SAAN,CAAgB;AACjDC,QAAAA,KAAK,EAAEhB;AAD0C,OAAhB,CAAnC;AAIAa,MAAAA,KAAK,CAACI,UAAN,CAAiB;AACfD,QAAAA,KAAK,EAAEhB,sBADQ;AAEfkB,QAAAA,IAAI,EAAE;AACJJ,UAAAA,sBAAsB,EAAEA,sBAAsB,CAACK,MAAvB,CACrBjB,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcA,EADJ;AADpB;AAFS,OAAjB;AAQD;;AAdmD,GAAlB,CAApC;AAiBA,QAAM;AAAA,OAACiB,YAAD;AAAA,OAAeC;AAAf,MAAkC1B,QAAQ,CAACc,MAAD,CAAhD;AACA,QAAM;AAAA,OAACa,KAAD;AAAA,OAAQC;AAAR,MAAoB5B,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,YAAJ,EAAkB;AAChBC,MAAAA,eAAe,CAACD,YAAD,CAAf;AACD;;AACDI,IAAAA,WAAW;AACZ,GALQ,EAKN,CAACJ,YAAD,CALM,CAAT;;AAOA,QAAMI,WAAW,GAAG,MAAM;AACxB,QAAIJ,YAAY,KAAK,WAArB,EAAkC;AAChCG,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACD;AACF,GAJD;;AAMA,SAAO,cAAP;AACD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport {\r\n  ACTUALIZAR_PEDIDO,\r\n  ELIMINAR_PEDIDO,\r\n  OBTENER_PEDIDOS_SINGLE,\r\n} from '../../graphql/pedidos';\r\n\r\nexport default function Pedido({ pedido }) {\r\n  const {\r\n    id,\r\n    total,\r\n    cliente: { nombre, telefono, email },\r\n    estado,\r\n    cliente,\r\n  } = pedido;\r\n  const [actualizarPedido] = useMutation(ACTUALIZAR_PEDIDO);\r\n  const [eliminarPedido] = useMutation(ELIMINAR_PEDIDO, {\r\n    update(cache) {\r\n      const { obtenerPedidosVendedor } = cache.readQuery({\r\n        query: OBTENER_PEDIDOS_SINGLE,\r\n      });\r\n\r\n      cache.writeQuery({\r\n        query: OBTENER_PEDIDOS_SINGLE,\r\n        data: {\r\n          obtenerPedidosVendedor: obtenerPedidosVendedor.filter(\r\n            (pedido) => pedido.id !== id\r\n          ),\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  const [estadoPedido, setEstadoPedido] = useState(estado);\r\n  const [clase, setClase] = useState('');\r\n  useEffect(() => {\r\n    if (estadoPedido) {\r\n      setEstadoPedido(estadoPedido);\r\n    }\r\n    clasePedido();\r\n  }, [estadoPedido]);\r\n\r\n  const clasePedido = () => {\r\n    if (estadoPedido === 'PENDIENTE') {\r\n      setClase('border-yellow-500');\r\n    }\r\n  };\r\n\r\n  return 'Desde Pedido';\r\n}\r\n"]},"metadata":{},"sourceType":"module"}