{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\editarproducto\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../component/Layout';\nimport { useRouter } from 'next/router';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Swal from 'sweetalert2';\nimport { OBTENER_PRODUCTO, ACTUALIZAR_PRODUCTO } from '../../graphql/productos';\nexport default function EditarProducto() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useQuery = useQuery(OBTENER_PRODUCTO, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data;\n\n  console.log(data);\n  var obtenerProducto;\n\n  if (data) {\n    obtenerProducto = data.obtenerProducto;\n  }\n\n  var _useMutation = useMutation(ACTUALIZAR_PRODUCTO),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      actualizarProducto = _useMutation2[0];\n\n  var initialValues = {\n    obtenerProducto: obtenerProducto\n  };\n  var validationSchema = Yup.object().shape({\n    nombre: Yup.string().required('Este campo es obligatorio'),\n    existencia: Yup.number().required('Este campo es obligatorio').positive('No se aceptan números negativos').integer('La existencia deben ser números enteros'),\n    precio: Yup.number().required('Este campo es obligatorio').positive('No se aceptan números negativos')\n  });\n  var formik = useFormik({\n    enableReinitialize: true,\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        var nombre, existencia, precio, input;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(values);\n                nombre = values.nombre, existencia = values.existencia, precio = values.precio;\n                _context.prev = 2;\n                input = {\n                  nombre: nombre,\n                  existencia: existencia,\n                  precio: precio\n                };\n                _context.next = 6;\n                return actualizarProducto({\n                  variables: {\n                    id: id,\n                    input: input\n                  }\n                });\n\n              case 6:\n                helpers.setSubmitting(false);\n                router.push('/productos');\n                Swal.fire('Correcto', 'El producto se actualió correctamente', 'success');\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Editar Producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Producto\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"existencia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Cantidad Disponible\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"existencia\",\n    type: \"number\",\n    placeholder: \"Cantidad Disponible\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.existencia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  })), formik.touched.existencia && formik.errors.existencia ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, formik.errors.existencia)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"precio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Precio\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"precio\",\n    type: \"number\",\n    placeholder: \"Precio Producto\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.precio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  })), formik.touched.precio && formik.errors.precio ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, formik.errors.precio)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Guardar Cambios\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(EditarProducto, \"EzR2JkwbIrAIyS+ko1P9ugbztXo=\", false, function () {\n  return [useRouter, useQuery, useMutation, useFormik];\n});\n\n_c = EditarProducto;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditarProducto\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/editarproducto/[id].js"],"names":["Layout","useRouter","useMutation","useQuery","useFormik","Yup","Swal","OBTENER_PRODUCTO","ACTUALIZAR_PRODUCTO","EditarProducto","router","id","query","variables","data","console","log","obtenerProducto","actualizarProducto","initialValues","validationSchema","object","shape","nombre","string","required","existencia","number","positive","integer","precio","formik","enableReinitialize","onSubmit","values","helpers","input","setSubmitting","push","fire","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import Layout from '../../component/Layout';\r\nimport { useRouter } from 'next/router';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\nimport { OBTENER_PRODUCTO, ACTUALIZAR_PRODUCTO } from '../../graphql/productos';\r\n\r\nexport default function EditarProducto() {\r\n  const router = useRouter();\r\n  const id = router.query.id;\r\n  const { data } = useQuery(OBTENER_PRODUCTO, {\r\n    variables: { id },\r\n  });\r\n  console.log(data);\r\n  let obtenerProducto;\r\n  if (data) {\r\n    obtenerProducto = data.obtenerProducto;\r\n  }\r\n  const [actualizarProducto] = useMutation(ACTUALIZAR_PRODUCTO);\r\n\r\n  const initialValues = { obtenerProducto };\r\n  const validationSchema = Yup.object().shape({\r\n    nombre: Yup.string().required('Este campo es obligatorio'),\r\n    existencia: Yup.number()\r\n      .required('Este campo es obligatorio')\r\n      .positive('No se aceptan números negativos')\r\n      .integer('La existencia deben ser números enteros'),\r\n    precio: Yup.number()\r\n      .required('Este campo es obligatorio')\r\n      .positive('No se aceptan números negativos'),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (values, helpers) => {\r\n      console.log(values);\r\n      const { nombre, existencia, precio } = values;\r\n      try {\r\n        const input = { nombre, existencia, precio };\r\n        await actualizarProducto({\r\n          variables: { id, input },\r\n        });\r\n        helpers.setSubmitting(false);\r\n        router.push('/productos');\r\n        Swal.fire(\r\n          'Correcto',\r\n          'El producto se actualió correctamente',\r\n          'success'\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-2xl text-gray-800 font-light\">Editar Producto</h1>\r\n\r\n      <div className=\"flex justify-center mt-5\">\r\n        <div className=\"w-full max-w-lg\">\r\n          <form\r\n            className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\"\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <div className=\"mb-4\">\r\n              <label\r\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                htmlFor=\"nombre\"\r\n              >\r\n                Nombre\r\n              </label>\r\n\r\n              <input\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"nombre\"\r\n                type=\"text\"\r\n                placeholder=\"Nombre Producto\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.nombre}\r\n              />\r\n            </div>\r\n\r\n            {formik.touched.nombre && formik.errors.nombre ? (\r\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                <p className=\"font-bold\">Error</p>\r\n                <p>{formik.errors.nombre}</p>\r\n              </div>\r\n            ) : null}\r\n\r\n            <div className=\"mb-4\">\r\n              <label\r\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                htmlFor=\"existencia\"\r\n              >\r\n                Cantidad Disponible\r\n              </label>\r\n\r\n              <input\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"existencia\"\r\n                type=\"number\"\r\n                placeholder=\"Cantidad Disponible\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.existencia}\r\n              />\r\n            </div>\r\n\r\n            {formik.touched.existencia && formik.errors.existencia ? (\r\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                <p className=\"font-bold\">Error</p>\r\n                <p>{formik.errors.existencia}</p>\r\n              </div>\r\n            ) : null}\r\n\r\n            <div className=\"mb-4\">\r\n              <label\r\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                htmlFor=\"precio\"\r\n              >\r\n                Precio\r\n              </label>\r\n\r\n              <input\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"precio\"\r\n                type=\"number\"\r\n                placeholder=\"Precio Producto\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.precio}\r\n              />\r\n            </div>\r\n\r\n            {formik.touched.precio && formik.errors.precio ? (\r\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                <p className=\"font-bold\">Error</p>\r\n                <p>{formik.errors.precio}</p>\r\n              </div>\r\n            ) : null}\r\n\r\n            <input\r\n              type=\"submit\"\r\n              className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\r\n              value=\"Guardar Cambios\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}