{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\nuevopedido.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport AsignarCliente from '../component/pedidos/AsignarCliente';\nimport AsignarProductos from '../component/pedidos/AsignarProductos';\nimport ResumenPedido from '../component/pedidos/ResumenPedido';\nimport Layout from '../component/Layout';\nimport Total from '../component/pedidos/Total';\nimport PedidoContext from '../context/pedidos/PedidoContex';\nimport { useMutation } from '@apollo/client';\nimport { useMessage } from '../hooks/useMessage';\nimport { NUEVO_PEDIDO } from '../graphql/pedidos';\nexport default function NuevoPedido() {\n  _s();\n\n  var pedidoContext = useContext(PedidoContext);\n\n  var _useMessage = useMessage(),\n      _useMessage2 = _slicedToArray(_useMessage, 3),\n      mensaje = _useMessage2[0],\n      guardarMensaje = _useMessage2[1],\n      mostrarMesaje = _useMessage2[2];\n\n  var _useMutation = useMutation(NUEVO_PEDIDO),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoPedido = _useMutation2[0];\n\n  var router = useRouter();\n  var cliente = pedidoContext.cliente,\n      productos = pedidoContext.productos,\n      total = pedidoContext.total;\n  var id = cliente.id;\n  var pedido = productos.map(function (_ref) {\n    var __typename = _ref.__typename,\n        existencia = _ref.existencia,\n        productos = _objectWithoutProperties(_ref, [\"__typename\", \"existencia\"]);\n\n    return productos;\n  });\n  console.log(input);\n\n  var newOrder = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _input, _yield$nuevoPedido, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _input = {\n                pedido: pedido,\n                id: id,\n                total: total\n              };\n              _context.next = 4;\n              return nuevoPedido({\n                variables: {\n                  input: _input\n                }\n              });\n\n            case 4:\n              _yield$nuevoPedido = _context.sent;\n              data = _yield$nuevoPedido.data;\n              console.log(data);\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              setMensaje(_context.t0.message.replace('GraphQL error: ', ''));\n              setTimeout(function () {\n                setMensaje(null);\n              }, 3000);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function newOrder() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var validarPedido = function validarPedido() {\n    return !(productos === null || productos === void 0 ? void 0 : productos.every(function (producto) {\n      return producto.cantidad > 0;\n    })) || total === 0 || cliente.length === 0 ? ' opacity-50 cursor-not-allowed ' : '';\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-center text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Crear Nuevo Pedido\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(AsignarCliente, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), __jsx(AsignarProductos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), __jsx(ResumenPedido, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), __jsx(Total, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \" bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 \".concat(validarPedido(), \" \"),\n    onClick: function onClick() {\n      return newOrder();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Registrar Pedido\"))));\n}\n\n_s(NuevoPedido, \"HyO4JYOkjSW9ktbYnGK+IDcXnhs=\", false, function () {\n  return [useMessage, useMutation, useRouter];\n});\n\n_c = NuevoPedido;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoPedido\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/nuevopedido.js"],"names":["React","useContext","useRouter","AsignarCliente","AsignarProductos","ResumenPedido","Layout","Total","PedidoContext","useMutation","useMessage","NUEVO_PEDIDO","NuevoPedido","pedidoContext","mensaje","guardarMensaje","mostrarMesaje","nuevoPedido","router","cliente","productos","total","id","pedido","map","__typename","existencia","console","log","input","newOrder","variables","data","setMensaje","message","replace","setTimeout","validarPedido","every","producto","cantidad","length","mostrarMensaje"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport AsignarCliente from '../component/pedidos/AsignarCliente';\r\nimport AsignarProductos from '../component/pedidos/AsignarProductos';\r\nimport ResumenPedido from '../component/pedidos/ResumenPedido';\r\nimport Layout from '../component/Layout';\r\nimport Total from '../component/pedidos/Total';\r\nimport PedidoContext from '../context/pedidos/PedidoContex';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useMessage } from '../hooks/useMessage';\r\nimport { NUEVO_PEDIDO } from '../graphql/pedidos';\r\n\r\nexport default function NuevoPedido() {\r\n  const pedidoContext = useContext(PedidoContext);\r\n  const [mensaje, guardarMensaje, mostrarMesaje] = useMessage();\r\n  const [nuevoPedido] = useMutation(NUEVO_PEDIDO);\r\n  const router = useRouter();\r\n  const { cliente, productos, total } = pedidoContext;\r\n  const { id } = cliente;\r\n  const pedido = productos.map(\r\n    ({ __typename, existencia, ...productos }) => productos\r\n  );\r\n  console.log(input);\r\n  const newOrder = async () => {\r\n    try {\r\n      const input = { pedido, id, total };\r\n      const { data } = await nuevoPedido({ variables: { input } });\r\n      console.log(data);\r\n    } catch (error) {\r\n      setMensaje(error.message.replace('GraphQL error: ', ''));\r\n\r\n      setTimeout(() => {\r\n        setMensaje(null);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const validarPedido = () => {\r\n    return !productos?.every((producto) => producto.cantidad > 0) ||\r\n      total === 0 ||\r\n      cliente.length === 0\r\n      ? ' opacity-50 cursor-not-allowed '\r\n      : '';\r\n  };\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-center text-2xl text-gray-800 font-light\">\r\n        Crear Nuevo Pedido\r\n      </h1>\r\n\r\n      {mensaje && mostrarMensaje()}\r\n\r\n      <div className=\"flex justify-center mt-5\">\r\n        <div className=\"w-full max-w-lg\">\r\n          <AsignarCliente />\r\n          <AsignarProductos />\r\n          <ResumenPedido />\r\n          <Total />\r\n\r\n          <button\r\n            type=\"button\"\r\n            className={` bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 ${validarPedido()} `}\r\n            onClick={() => newOrder()}\r\n          >\r\n            Registrar Pedido\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}