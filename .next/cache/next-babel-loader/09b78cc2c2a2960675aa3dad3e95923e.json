{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\context\\\\pedidos\\\\PedidoState.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport PedidoContext from './PedidoContex';\nimport PedidoReducer from './PedidoReducer';\nimport { ACTUALIZAR_TOTAL, CANTIDAD_PRODUCTOS, SELECCIONAR_CLIENTE, SELECCIONAR_PRODUCTO } from '../../types';\n\nvar PedidoState = function PedidoState(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var initialState = {\n    cliente: {},\n    productos: [],\n    total: 0\n  };\n\n  var _useReducer = useReducer(PedidoReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var agregarCliente = function agregarCliente(cliente) {\n    dispatch({\n      type: SELECCIONAR_CLIENTE,\n      payload: cliente\n    });\n  };\n\n  var agregarProducto = function agregarProducto(productosSeleccionados) {\n    var nuevoState;\n\n    if (state.productos.length > 0) {\n      if (productosSeleccionados) {\n        nuevoState = productosSeleccionados.map(function (producto) {\n          var nuevoObjeto = state.productos.find(function (productoState) {\n            return productoState.id === producto.id;\n          });\n          return _objectSpread(_objectSpread({}, producto), nuevoObjeto);\n        });\n      }\n    } else {\n      nuevoState = productosSeleccionados;\n    }\n\n    dispatch({\n      type: SELECCIONAR_PRODUCTO,\n      payload: nuevoState\n    });\n  };\n\n  var cantidadProductos = function cantidadProductos(nuevoProducto) {\n    dispatch({\n      type: CANTIDAD_PRODUCTOS,\n      payload: nuevoProducto\n    });\n  };\n\n  var actualizarTotal = function actualizarTotal() {\n    dispatch({\n      type: ACTUALIZAR_TOTAL\n    });\n  };\n\n  return __jsx(PedidoContext.Provider, {\n    value: {\n      cliente: state.cliente,\n      productos: state.productos,\n      total: state.total,\n      agregarCliente: agregarCliente,\n      agregarProducto: agregarProducto,\n      cantidadProductos: cantidadProductos,\n      actualizarTotal: actualizarTotal\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(PedidoState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = PedidoState;\nexport default PedidoState;\n\nvar _c;\n\n$RefreshReg$(_c, \"PedidoState\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/context/pedidos/PedidoState.js"],"names":["React","useReducer","PedidoContext","PedidoReducer","ACTUALIZAR_TOTAL","CANTIDAD_PRODUCTOS","SELECCIONAR_CLIENTE","SELECCIONAR_PRODUCTO","PedidoState","children","initialState","cliente","productos","total","state","dispatch","agregarCliente","type","payload","agregarProducto","productosSeleccionados","nuevoState","length","map","producto","nuevoObjeto","find","productoState","id","cantidadProductos","nuevoProducto","actualizarTotal"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SACEC,gBADF,EAEEC,kBAFF,EAGEC,mBAHF,EAIEC,oBAJF,QAKO,aALP;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACpC,MAAMC,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,EADU;AAEnBC,IAAAA,SAAS,EAAE,EAFQ;AAGnBC,IAAAA,KAAK,EAAE;AAHY,GAArB;;AADoC,oBAOVZ,UAAU,CAACE,aAAD,EAAgBO,YAAhB,CAPA;AAAA,MAO7BI,KAP6B;AAAA,MAOtBC,QAPsB;;AASpC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACL,OAAD,EAAa;AAClCI,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEX,mBADC;AAEPY,MAAAA,OAAO,EAAEP;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,sBAAD,EAA4B;AAClD,QAAIC,UAAJ;;AACA,QAAIP,KAAK,CAACF,SAAN,CAAgBU,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,UAAIF,sBAAJ,EAA4B;AAC1BC,QAAAA,UAAU,GAAGD,sBAAsB,CAACG,GAAvB,CAA2B,UAACC,QAAD,EAAc;AACpD,cAAMC,WAAW,GAAGX,KAAK,CAACF,SAAN,CAAgBc,IAAhB,CAClB,UAACC,aAAD;AAAA,mBAAmBA,aAAa,CAACC,EAAd,KAAqBJ,QAAQ,CAACI,EAAjD;AAAA,WADkB,CAApB;AAGA,iDAAYJ,QAAZ,GAAyBC,WAAzB;AACD,SALY,CAAb;AAMD;AACF,KATD,MASO;AACLJ,MAAAA,UAAU,GAAGD,sBAAb;AACD;;AAEDL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEV,oBADC;AAEPW,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAID,GAnBD;;AAqBA,MAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,aAAD,EAAmB;AAC3Cf,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEZ,kBADC;AAEPa,MAAAA,OAAO,EAAEY;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BhB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,SACE,MAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLO,MAAAA,OAAO,EAAEG,KAAK,CAACH,OADV;AAELC,MAAAA,SAAS,EAAEE,KAAK,CAACF,SAFZ;AAGLC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KAHR;AAILG,MAAAA,cAAc,EAAdA,cAJK;AAKLG,MAAAA,eAAe,EAAfA,eALK;AAMLU,MAAAA,iBAAiB,EAAjBA,iBANK;AAOLE,MAAAA,eAAe,EAAfA;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGtB,QAXH,CADF;AAeD,CAjED;;GAAMD,W;;KAAAA,W;AAmEN,eAAeA,WAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport PedidoContext from './PedidoContex';\r\nimport PedidoReducer from './PedidoReducer';\r\n\r\nimport {\r\n  ACTUALIZAR_TOTAL,\r\n  CANTIDAD_PRODUCTOS,\r\n  SELECCIONAR_CLIENTE,\r\n  SELECCIONAR_PRODUCTO,\r\n} from '../../types';\r\nconst PedidoState = ({ children }) => {\r\n  const initialState = {\r\n    cliente: {},\r\n    productos: [],\r\n    total: 0,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(PedidoReducer, initialState);\r\n\r\n  const agregarCliente = (cliente) => {\r\n    dispatch({\r\n      type: SELECCIONAR_CLIENTE,\r\n      payload: cliente,\r\n    });\r\n  };\r\n\r\n  const agregarProducto = (productosSeleccionados) => {\r\n    let nuevoState;\r\n    if (state.productos.length > 0) {\r\n      if (productosSeleccionados) {\r\n        nuevoState = productosSeleccionados.map((producto) => {\r\n          const nuevoObjeto = state.productos.find(\r\n            (productoState) => productoState.id === producto.id\r\n          );\r\n          return { ...producto, ...nuevoObjeto };\r\n        });\r\n      }\r\n    } else {\r\n      nuevoState = productosSeleccionados;\r\n    }\r\n\r\n    dispatch({\r\n      type: SELECCIONAR_PRODUCTO,\r\n      payload: nuevoState,\r\n    });\r\n  };\r\n\r\n  const cantidadProductos = (nuevoProducto) => {\r\n    dispatch({\r\n      type: CANTIDAD_PRODUCTOS,\r\n      payload: nuevoProducto,\r\n    });\r\n  };\r\n\r\n  const actualizarTotal = () => {\r\n    dispatch({\r\n      type: ACTUALIZAR_TOTAL,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PedidoContext.Provider\r\n      value={{\r\n        cliente: state.cliente,\r\n        productos: state.productos,\r\n        total: state.total,\r\n        agregarCliente,\r\n        agregarProducto,\r\n        cantidadProductos,\r\n        actualizarTotal,\r\n      }}\r\n    >\r\n      {children}\r\n    </PedidoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PedidoState;\r\n"]},"metadata":{},"sourceType":"module"}