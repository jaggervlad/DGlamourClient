{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\component\\\\pedidos\\\\AsignarCliente.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport Select from 'react-select';\nimport { useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContex';\nimport { OBTENER_CLIENTES_VENDEDOR } from '../../graphql/clientes';\nexport default function AsignarClient() {\n  const {\n    0: cliente,\n    1: setCliente\n  } = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_CLIENTES_VENDEDOR);\n  console.log(loading);\n  console.log(error);\n  console.log(data);\n  useEffect(() => {\n    console.log(cliente);\n  }, [cliente]);\n\n  const seleccionarCliente = client => {\n    setCliente(client);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"1.- Asigna un Cliente al pedido\"), __jsx(Select, {\n    className: \"mt-3\" // options={options}\n    ,\n    onChange: opc => seleccionarCliente(opc),\n    getOptionValue: opc => opc.id,\n    getOptionLabel: opc => opc.nombre,\n    placeholder: \"Seleccionar Cliente\",\n    noOptionsMessage: () => 'No hay resultados',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/component/pedidos/AsignarCliente.js"],"names":["React","useState","useEffect","useContext","Select","useQuery","PedidoContext","OBTENER_CLIENTES_VENDEDOR","AsignarClient","cliente","setCliente","data","loading","error","console","log","seleccionarCliente","client","opc","id","nombre"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,yBAAT,QAA0C,wBAA1C;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEU,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACE,yBAAD,CAAzC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,QAAMO,kBAAkB,GAAIC,MAAD,IAAY;AACrCP,IAAAA,UAAU,CAACO,MAAD,CAAV;AACD,GAFD;;AAIA,SACE,4BACE;AAAG,IAAA,SAAS,EAAC,oFAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAKE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,MADZ,CAEE;AAFF;AAGE,IAAA,QAAQ,EAAGC,GAAD,IAASF,kBAAkB,CAACE,GAAD,CAHvC;AAIE,IAAA,cAAc,EAAGA,GAAD,IAASA,GAAG,CAACC,EAJ/B;AAKE,IAAA,cAAc,EAAGD,GAAD,IAASA,GAAG,CAACE,MAL/B;AAME,IAAA,WAAW,EAAC,qBANd;AAOE,IAAA,gBAAgB,EAAE,MAAM,mBAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAiBD","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport Select from 'react-select';\r\nimport { useQuery } from '@apollo/client';\r\nimport PedidoContext from '../../context/pedidos/PedidoContex';\r\nimport { OBTENER_CLIENTES_VENDEDOR } from '../../graphql/clientes';\r\n\r\nexport default function AsignarClient() {\r\n  const [cliente, setCliente] = useState([]);\r\n  const { data, loading, error } = useQuery(OBTENER_CLIENTES_VENDEDOR);\r\n  console.log(loading);\r\n  console.log(error);\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    console.log(cliente);\r\n  }, [cliente]);\r\n\r\n  const seleccionarCliente = (client) => {\r\n    setCliente(client);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className=\"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\">\r\n        1.- Asigna un Cliente al pedido\r\n      </p>\r\n\r\n      <Select\r\n        className=\"mt-3\"\r\n        // options={options}\r\n        onChange={(opc) => seleccionarCliente(opc)}\r\n        getOptionValue={(opc) => opc.id}\r\n        getOptionLabel={(opc) => opc.nombre}\r\n        placeholder=\"Seleccionar Cliente\"\r\n        noOptionsMessage={() => 'No hay resultados'}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}