{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\context\\\\pedidos\\\\PedidoState.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from 'react';\nimport PedidoContext from './PedidoContex';\nimport PedidoReducer from './PedidoReducer';\nimport { ACTUALIZAR_TOTAL, CANTIDAD_PRODUCTOS, SELECCIONAR_CLIENTE, SELECCIONAR_PRODUCTO } from '../../types';\n\nconst PedidoState = ({\n  children\n}) => {\n  const initialState = {\n    client: {},\n    productos: [],\n    total: 0\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(PedidoReducer, initialState);\n\n  const agregarCliente = client => {\n    dispatch({\n      type: SELECCIONAR_CLIENTE,\n      payload: client\n    });\n  };\n\n  const agregarProducto = productosSeleccionados => {\n    let nuevoState;\n\n    if (state.productos.length > 0) {\n      nuevoState = productosSeleccionados.map(producto => {\n        const nuevoObjeto = state.productos.find(productoState => productoState.id === producto.id);\n        return _objectSpread(_objectSpread({}, producto), nuevoObjeto);\n      });\n    } else {\n      nuevoState = productosSeleccionados;\n    }\n\n    dispatch({\n      type: SELECCIONAR_PRODUCTO,\n      payload: nuevoState\n    });\n  };\n\n  const cantidadProductos = nuevoProducto => {\n    dispatch({\n      type: CANTIDAD_PRODUCTOS,\n      payload: nuevoProducto\n    });\n  };\n\n  const actualizarTotal = () => {\n    dispatch({\n      type: ACTUALIZAR_TOTAL\n    });\n  };\n\n  return __jsx(PedidoContext.Provider, {\n    value: {\n      cliente: state.cliente,\n      productos: state.productos,\n      total: state.total,\n      agregarCliente,\n      agregarProducto,\n      cantidadProductos,\n      actualizarTotal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default PedidoState;","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/context/pedidos/PedidoState.js"],"names":["React","useReducer","PedidoContext","PedidoReducer","ACTUALIZAR_TOTAL","CANTIDAD_PRODUCTOS","SELECCIONAR_CLIENTE","SELECCIONAR_PRODUCTO","PedidoState","children","initialState","client","productos","total","state","dispatch","agregarCliente","type","payload","agregarProducto","productosSeleccionados","nuevoState","length","map","producto","nuevoObjeto","find","productoState","id","cantidadProductos","nuevoProducto","actualizarTotal","cliente"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SACEC,gBADF,EAEEC,kBAFF,EAGEC,mBAHF,EAIEC,oBAJF,QAKO,aALP;;AAMA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAE,EADW;AAEnBC,IAAAA,SAAS,EAAE,EAFQ;AAGnBC,IAAAA,KAAK,EAAE;AAHY,GAArB;AAMA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBd,UAAU,CAACE,aAAD,EAAgBO,YAAhB,CAApC;;AAEA,QAAMM,cAAc,GAAIL,MAAD,IAAY;AACjCI,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEX,mBADC;AAEPY,MAAAA,OAAO,EAAEP;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMQ,eAAe,GAAIC,sBAAD,IAA4B;AAClD,QAAIC,UAAJ;;AACA,QAAIP,KAAK,CAACF,SAAN,CAAgBU,MAAhB,GAAyB,CAA7B,EAAgC;AAC9BD,MAAAA,UAAU,GAAGD,sBAAsB,CAACG,GAAvB,CAA4BC,QAAD,IAAc;AACpD,cAAMC,WAAW,GAAGX,KAAK,CAACF,SAAN,CAAgBc,IAAhB,CACjBC,aAAD,IAAmBA,aAAa,CAACC,EAAd,KAAqBJ,QAAQ,CAACI,EAD/B,CAApB;AAGA,+CAAYJ,QAAZ,GAAyBC,WAAzB;AACD,OALY,CAAb;AAMD,KAPD,MAOO;AACLJ,MAAAA,UAAU,GAAGD,sBAAb;AACD;;AAEDL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEV,oBADC;AAEPW,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAID,GAjBD;;AAmBA,QAAMQ,iBAAiB,GAAIC,aAAD,IAAmB;AAC3Cf,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEZ,kBADC;AAEPa,MAAAA,OAAO,EAAEY;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,eAAe,GAAG,MAAM;AAC5BhB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,SACE,MAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACL4B,MAAAA,OAAO,EAAElB,KAAK,CAACkB,OADV;AAELpB,MAAAA,SAAS,EAAEE,KAAK,CAACF,SAFZ;AAGLC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KAHR;AAILG,MAAAA,cAJK;AAKLG,MAAAA,eALK;AAMLU,MAAAA,iBANK;AAOLE,MAAAA;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGtB,QAXH,CADF;AAeD,CA/DD;;AAiEA,eAAeD,WAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport PedidoContext from './PedidoContex';\r\nimport PedidoReducer from './PedidoReducer';\r\n\r\nimport {\r\n  ACTUALIZAR_TOTAL,\r\n  CANTIDAD_PRODUCTOS,\r\n  SELECCIONAR_CLIENTE,\r\n  SELECCIONAR_PRODUCTO,\r\n} from '../../types';\r\nconst PedidoState = ({ children }) => {\r\n  const initialState = {\r\n    client: {},\r\n    productos: [],\r\n    total: 0,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(PedidoReducer, initialState);\r\n\r\n  const agregarCliente = (client) => {\r\n    dispatch({\r\n      type: SELECCIONAR_CLIENTE,\r\n      payload: client,\r\n    });\r\n  };\r\n\r\n  const agregarProducto = (productosSeleccionados) => {\r\n    let nuevoState;\r\n    if (state.productos.length > 0) {\r\n      nuevoState = productosSeleccionados.map((producto) => {\r\n        const nuevoObjeto = state.productos.find(\r\n          (productoState) => productoState.id === producto.id\r\n        );\r\n        return { ...producto, ...nuevoObjeto };\r\n      });\r\n    } else {\r\n      nuevoState = productosSeleccionados;\r\n    }\r\n\r\n    dispatch({\r\n      type: SELECCIONAR_PRODUCTO,\r\n      payload: nuevoState,\r\n    });\r\n  };\r\n\r\n  const cantidadProductos = (nuevoProducto) => {\r\n    dispatch({\r\n      type: CANTIDAD_PRODUCTOS,\r\n      payload: nuevoProducto,\r\n    });\r\n  };\r\n\r\n  const actualizarTotal = () => {\r\n    dispatch({\r\n      type: ACTUALIZAR_TOTAL,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PedidoContext.Provider\r\n      value={{\r\n        cliente: state.cliente,\r\n        productos: state.productos,\r\n        total: state.total,\r\n        agregarCliente,\r\n        agregarProducto,\r\n        cantidadProductos,\r\n        actualizarTotal,\r\n      }}\r\n    >\r\n      {children}\r\n    </PedidoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PedidoState;\r\n"]},"metadata":{},"sourceType":"module"}