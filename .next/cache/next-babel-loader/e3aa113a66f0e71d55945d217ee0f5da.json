{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\nuevopedido.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport AsignarCliente from '../component/pedidos/AsignarCliente';\nimport AsignarProductos from '../component/pedidos/AsignarProductos';\nimport ResumenPedido from '../component/pedidos/ResumenPedido';\nimport Layout from '../component/Layout';\nimport Total from '../component/pedidos/Total';\nimport PedidoContext from '../context/pedidos/PedidoContex';\nimport { useMutation } from '@apollo/client';\nimport { useMessage } from '../hooks/useMessage';\nexport default function NuevoPedido() {\n  const pedidoContext = useContext(PedidoContext);\n  const [mensaje, guardarMensaje, mostrarMesaje] = useMessage();\n  const router = useRouter();\n  const {\n    cliente,\n    productos,\n    total\n  } = pedidoContext;\n  const {\n    id\n  } = cliente;\n  const pedido = productos.map((_ref) => {\n    let {\n      __typename,\n      existencia\n    } = _ref,\n        productos = _objectWithoutProperties(_ref, [\"__typename\", \"existencia\"]);\n\n    return productos;\n  });\n  const input = {\n    pedido,\n    id,\n    total\n  };\n\n  const nuevoPedido = () => {\n    try {} catch (error) {}\n  };\n\n  const validarPedido = () => {\n    return !(productos === null || productos === void 0 ? void 0 : productos.every(producto => producto.cantidad > 0)) || total === 0 || cliente.length === 0 ? ' opacity-50 cursor-not-allowed ' : '';\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-center text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Crear Nuevo Pedido\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(AsignarCliente, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), __jsx(AsignarProductos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), __jsx(ResumenPedido, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), __jsx(Total, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: ` bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 ${validarPedido()} ` // onClick={() => crearNuevoPedido()}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Registrar Pedido\"))));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/nuevopedido.js"],"names":["React","useContext","useRouter","AsignarCliente","AsignarProductos","ResumenPedido","Layout","Total","PedidoContext","useMutation","useMessage","NuevoPedido","pedidoContext","mensaje","guardarMensaje","mostrarMesaje","router","cliente","productos","total","id","pedido","map","__typename","existencia","input","nuevoPedido","error","validarPedido","every","producto","cantidad","length"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAMC,aAAa,GAAGX,UAAU,CAACO,aAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,cAAV,EAA0BC,aAA1B,IAA2CL,UAAU,EAA3D;AACA,QAAMM,MAAM,GAAGd,SAAS,EAAxB;AACA,QAAM;AAAEe,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAAgCP,aAAtC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASH,OAAf;AACA,QAAMI,MAAM,GAAGH,SAAS,CAACI,GAAV,CACb;AAAA,QAAC;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAAD;AAAA,QAA8BN,SAA9B;;AAAA,WAA8CA,SAA9C;AAAA,GADa,CAAf;AAIA,QAAMO,KAAK,GAAG;AACZJ,IAAAA,MADY;AAEZD,IAAAA,EAFY;AAGZD,IAAAA;AAHY,GAAd;;AAMA,QAAMO,WAAW,GAAG,MAAM;AACxB,QAAI,CACH,CADD,CACE,OAAOC,KAAP,EAAc,CAAE;AACnB,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AAC1B,WAAO,EAACV,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEW,KAAX,CAAkBC,QAAD,IAAcA,QAAQ,CAACC,QAAT,GAAoB,CAAnD,CAAD,KACLZ,KAAK,KAAK,CADL,IAELF,OAAO,CAACe,MAAR,KAAmB,CAFd,GAGH,iCAHG,GAIH,EAJJ;AAKD,GAND;;AAOA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,+CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAKE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAME;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAG,iFAAgFJ,aAAa,EAAG,GAF9G,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,CADF,CALF,CADF;AAwBD","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport AsignarCliente from '../component/pedidos/AsignarCliente';\r\nimport AsignarProductos from '../component/pedidos/AsignarProductos';\r\nimport ResumenPedido from '../component/pedidos/ResumenPedido';\r\nimport Layout from '../component/Layout';\r\nimport Total from '../component/pedidos/Total';\r\nimport PedidoContext from '../context/pedidos/PedidoContex';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useMessage } from '../hooks/useMessage';\r\n\r\nexport default function NuevoPedido() {\r\n  const pedidoContext = useContext(PedidoContext);\r\n  const [mensaje, guardarMensaje, mostrarMesaje] = useMessage();\r\n  const router = useRouter();\r\n  const { cliente, productos, total } = pedidoContext;\r\n  const { id } = cliente;\r\n  const pedido = productos.map(\r\n    ({ __typename, existencia, ...productos }) => productos\r\n  );\r\n\r\n  const input = {\r\n    pedido,\r\n    id,\r\n    total,\r\n  };\r\n\r\n  const nuevoPedido = () => {\r\n    try {\r\n    } catch (error) {}\r\n  };\r\n\r\n  const validarPedido = () => {\r\n    return !productos?.every((producto) => producto.cantidad > 0) ||\r\n      total === 0 ||\r\n      cliente.length === 0\r\n      ? ' opacity-50 cursor-not-allowed '\r\n      : '';\r\n  };\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-center text-2xl text-gray-800 font-light\">\r\n        Crear Nuevo Pedido\r\n      </h1>\r\n\r\n      <div className=\"flex justify-center mt-5\">\r\n        <div className=\"w-full max-w-lg\">\r\n          <AsignarCliente />\r\n          <AsignarProductos />\r\n          <ResumenPedido />\r\n          <Total />\r\n\r\n          <button\r\n            type=\"button\"\r\n            className={` bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 ${validarPedido()} `}\r\n            // onClick={() => crearNuevoPedido()}\r\n          >\r\n            Registrar Pedido\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}