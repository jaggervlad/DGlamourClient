{"ast":null,"code":"import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport fetch from 'node-fetch';\nimport withApollo from 'next-with-apollo';\nvar httpLink = createHttpLink({\n  uri: 'https://blooming-citadel-99802.herokuapp.com/',\n  fetch: fetch,\n  credentials: 'include'\n});\nexport function getStandAloneApollo() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new ApolloClient({\n    connectToDevTools: true,\n    link: httpLink,\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}\nexport default _c2 = withApollo(_c = function _c(_ref) {\n  var initialState = _ref.initialState;\n  return getStandAloneApollo(initialState);\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$withApollo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/apollo/index.js"],"names":["ApolloClient","createHttpLink","InMemoryCache","fetch","withApollo","httpLink","uri","credentials","getStandAloneApollo","initialState","connectToDevTools","link","cache","restore"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,IAAMC,QAAQ,GAAGJ,cAAc,CAAC;AAC9BK,EAAAA,GAAG,EAAE,+CADyB;AAE9BH,EAAAA,KAAK,EAALA,KAF8B;AAG9BI,EAAAA,WAAW,EAAE;AAHiB,CAAD,CAA/B;AAMA,OAAO,SAASC,mBAAT,GAAgD;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AACrD,SAAO,IAAIT,YAAJ,CAAiB;AACtBU,IAAAA,iBAAiB,EAAE,IADG;AAEtBC,IAAAA,IAAI,EAAEN,QAFgB;AAGtBO,IAAAA,KAAK,EAAE,IAAIV,aAAJ,GAAoBW,OAApB,CAA4BJ,YAAY,IAAI,EAA5C;AAHe,GAAjB,CAAP;AAKD;AAED,qBAAeL,UAAU,MAAC;AAAA,MAAGK,YAAH,QAAGA,YAAH;AAAA,SACxBD,mBAAmB,CAACC,YAAD,CADK;AAAA,CAAD,CAAzB","sourcesContent":["import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\r\nimport fetch from 'node-fetch';\r\nimport withApollo from 'next-with-apollo';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'https://blooming-citadel-99802.herokuapp.com/',\r\n  fetch,\r\n  credentials: 'include',\r\n});\r\n\r\nexport function getStandAloneApollo(initialState = {}) {\r\n  return new ApolloClient({\r\n    connectToDevTools: true,\r\n    link: httpLink,\r\n    cache: new InMemoryCache().restore(initialState || {}),\r\n  });\r\n}\r\n\r\nexport default withApollo(({ initialState }) =>\r\n  getStandAloneApollo(initialState)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}