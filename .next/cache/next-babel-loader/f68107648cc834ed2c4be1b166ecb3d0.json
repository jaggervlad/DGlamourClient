{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\component\\\\pedidos\\\\AsignarCliente.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport Select from 'react-select';\nimport { useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContex';\nexport default function AsignarClient() {\n  _s();\n\n  var _useState = useState([]),\n      cliente = _useState[0],\n      setCliente = _useState[1];\n\n  var options = [{\n    id: '1',\n    nombre: 'sebastian'\n  }, {\n    id: '2',\n    nombre: 'jorge'\n  }, {\n    id: '3',\n    nombre: 'luis'\n  }];\n\n  var seleccionarCliente = function seleccionarCliente(client) {\n    setCliente(client);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"1.- Asigna un Cliente al pedido\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: options,\n    onChange: function onChange(opc) {\n      return seleccionarCliente(opc);\n    },\n    getOptionValue: function getOptionValue(opc) {\n      return opc.id;\n    },\n    getOptionLabel: function getOptionLabel(opc) {\n      return opc.nombre;\n    },\n    placeholder: \"Seleccionar Cliente\",\n    noOptionsMessage: function noOptionsMessage() {\n      return 'No hay resultados';\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(AsignarClient, \"Pkj16L4Xnl0TsK0RTzP2IGJi36s=\");\n\n_c = AsignarClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsignarClient\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/component/pedidos/AsignarCliente.js"],"names":["React","useState","useEffect","useContext","Select","useQuery","PedidoContext","AsignarClient","cliente","setCliente","options","id","nombre","seleccionarCliente","client","opc"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAAA,kBACRN,QAAQ,CAAC,EAAD,CADA;AAAA,MAC/BO,OAD+B;AAAA,MACtBC,UADsB;;AAGtC,MAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,MAAM,EAAE;AAAnB,GADc,EAEd;AAAED,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,MAAM,EAAE;AAAnB,GAFc,EAGd;AAAED,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,MAAM,EAAE;AAAnB,GAHc,CAAhB;;AAMA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD,EAAY;AACrCL,IAAAA,UAAU,CAACK,MAAD,CAAV;AACD,GAFD;;AAIA,SACE,4BACE;AAAG,IAAA,SAAS,EAAC,oFAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAKE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,OAAO,EAAEJ,OAFX;AAGE,IAAA,QAAQ,EAAE,kBAACK,GAAD;AAAA,aAASF,kBAAkB,CAACE,GAAD,CAA3B;AAAA,KAHZ;AAIE,IAAA,cAAc,EAAE,wBAACA,GAAD;AAAA,aAASA,GAAG,CAACJ,EAAb;AAAA,KAJlB;AAKE,IAAA,cAAc,EAAE,wBAACI,GAAD;AAAA,aAASA,GAAG,CAACH,MAAb;AAAA,KALlB;AAME,IAAA,WAAW,EAAC,qBANd;AAOE,IAAA,gBAAgB,EAAE;AAAA,aAAM,mBAAN;AAAA,KAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAiBD;;GA9BuBL,a;;KAAAA,a","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport Select from 'react-select';\r\nimport { useQuery } from '@apollo/client';\r\nimport PedidoContext from '../../context/pedidos/PedidoContex';\r\n\r\nexport default function AsignarClient() {\r\n  const [cliente, setCliente] = useState([]);\r\n\r\n  const options = [\r\n    { id: '1', nombre: 'sebastian' },\r\n    { id: '2', nombre: 'jorge' },\r\n    { id: '3', nombre: 'luis' },\r\n  ];\r\n\r\n  const seleccionarCliente = (client) => {\r\n    setCliente(client);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className=\"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\">\r\n        1.- Asigna un Cliente al pedido\r\n      </p>\r\n\r\n      <Select\r\n        className=\"mt-3\"\r\n        options={options}\r\n        onChange={(opc) => seleccionarCliente(opc)}\r\n        getOptionValue={(opc) => opc.id}\r\n        getOptionLabel={(opc) => opc.nombre}\r\n        placeholder=\"Seleccionar Cliente\"\r\n        noOptionsMessage={() => 'No hay resultados'}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}