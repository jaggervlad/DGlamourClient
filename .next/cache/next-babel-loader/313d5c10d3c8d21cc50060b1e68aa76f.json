{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport Layout from '../../component/Layout';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Swal from 'sweetalert2';\nimport { OBTENER_CLIENTE, ACTUALIZAR_CLIENTE } from '../../graphql/clientes';\nexport default function EditarCliente() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useQuery = useQuery(OBTENER_CLIENTE, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useMutation = useMutation(ACTUALIZAR_CLIENTE),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      actualizarCliente = _useMutation2[0];\n\n  var validationSchema = Yup.object().shape({\n    nombre: Yup.string().required('El nombre del cliente es obligatorio'),\n    apellido: Yup.string().required('El apellido del cliente es obligatorio'),\n    empresa: Yup.string().required('El campo empresa  es obligatorio'),\n    email: Yup.string().email('Email no válido').required('El email del cliente es obligatorio')\n  });\n}\n\n_s(EditarCliente, \"DFTfobEnZ5MowDQwdmM65JATMts=\", false, function () {\n  return [useRouter, useQuery, useMutation];\n});\n\n_c = EditarCliente;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditarCliente\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/editarcliente/[id].js"],"names":["useRouter","Layout","useQuery","useMutation","Formik","Yup","Swal","OBTENER_CLIENTE","ACTUALIZAR_CLIENTE","EditarCliente","router","id","query","variables","data","loading","error","actualizarCliente","validationSchema","object","shape","nombre","string","required","apellido","empresa","email"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,wBAApD;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,MAAMW,EAAE,GAAGD,MAAM,CAACE,KAAP,CAAaD,EAAxB;;AAFsC,kBAGLT,QAAQ,CAACK,eAAD,EAAkB;AACzDM,IAAAA,SAAS,EAAE;AAAEF,MAAAA,EAAE,EAAFA;AAAF;AAD8C,GAAlB,CAHH;AAAA,MAG9BG,IAH8B,aAG9BA,IAH8B;AAAA,MAGxBC,OAHwB,aAGxBA,OAHwB;AAAA,MAGfC,KAHe,aAGfA,KAHe;;AAAA,qBAMVb,WAAW,CAACK,kBAAD,CAND;AAAA;AAAA,MAM/BS,iBAN+B;;AAQtC,MAAMC,gBAAgB,GAAGb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,MAAM,EAAEhB,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,sCAAtB,CADkC;AAE1CC,IAAAA,QAAQ,EAAEnB,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,wCAAtB,CAFgC;AAG1CE,IAAAA,OAAO,EAAEpB,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,kCAAtB,CAHiC;AAI1CG,IAAAA,KAAK,EAAErB,GAAG,CAACiB,MAAJ,GACJI,KADI,CACE,iBADF,EAEJH,QAFI,CAEK,qCAFL;AAJmC,GAAnB,CAAzB;AAQD;;GAhBuBd,a;UACPT,S,EAEkBE,Q,EAGLC,W;;;KANNM,a","sourcesContent":["import { useRouter } from 'next/router';\r\nimport Layout from '../../component/Layout';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\nimport { OBTENER_CLIENTE, ACTUALIZAR_CLIENTE } from '../../graphql/clientes';\r\n\r\nexport default function EditarCliente() {\r\n  const router = useRouter();\r\n  const id = router.query.id;\r\n  const { data, loading, error } = useQuery(OBTENER_CLIENTE, {\r\n    variables: { id },\r\n  });\r\n  const [actualizarCliente] = useMutation(ACTUALIZAR_CLIENTE);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    nombre: Yup.string().required('El nombre del cliente es obligatorio'),\r\n    apellido: Yup.string().required('El apellido del cliente es obligatorio'),\r\n    empresa: Yup.string().required('El campo empresa  es obligatorio'),\r\n    email: Yup.string()\r\n      .email('Email no válido')\r\n      .required('El email del cliente es obligatorio'),\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}