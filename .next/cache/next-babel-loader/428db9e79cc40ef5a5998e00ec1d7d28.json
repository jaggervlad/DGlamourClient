{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\component\\\\pedidos\\\\AsignarProductos.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport Select from 'react-select';\nimport { useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContex';\nimport { OBTENER_PRODUCTOS } from '../../graphql/productos';\nexport default function AsignarProductos() {\n  const {\n    0: productos,\n    1: setProductos\n  } = useState([]);\n  const {\n    agregarProducto\n  } = useContext(PedidoContext);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_PRODUCTOS);\n  useEffect(() => {\n    agregarProducto(productos);\n  }, [productos]);\n\n  const seleccionarProductos = productos => {\n    setProductos(productos);\n  };\n\n  if (loading) return null;\n  if (error) return null;\n  const obtenerProductos = data === null || data === void 0 ? void 0 : data.obtenerProductos;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"1.- Asignar Productos\"), __jsx(Select, {\n    className: \"mt-3\",\n    isMulti: true,\n    options: obtenerProductos,\n    onChange: opc => seleccionarProductos(opc),\n    getOptionValue: opc => opc.id,\n    getOptionLabel: opc => `${opc.nombre}  |  Disponible: ${opc.existencia}`,\n    placeholder: \"Seleccionar Productos\",\n    noOptionsMessage: () => 'No hay resultados',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/component/pedidos/AsignarProductos.js"],"names":["React","useState","useEffect","useContext","Select","useQuery","PedidoContext","OBTENER_PRODUCTOS","AsignarProductos","productos","setProductos","agregarProducto","data","loading","error","seleccionarProductos","obtenerProductos","opc","id","nombre","existencia"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AAEA,eAAe,SAASC,gBAAT,GAA4B;AACzC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAsBR,UAAU,CAACG,aAAD,CAAtC;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BT,QAAQ,CAACE,iBAAD,CAAzC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,eAAe,CAACF,SAAD,CAAf;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;;AAIA,QAAMM,oBAAoB,GAAIN,SAAD,IAAe;AAC1CC,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,GAFD;;AAIA,MAAII,OAAJ,EAAa,OAAO,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,IAAP;AACX,QAAME,gBAAgB,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,gBAA/B;AAEA,SACE,4BACE;AAAG,IAAA,SAAS,EAAC,oFAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAKE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,OAAO,EAAE,IAFX;AAGE,IAAA,OAAO,EAAEA,gBAHX;AAIE,IAAA,QAAQ,EAAGC,GAAD,IAASF,oBAAoB,CAACE,GAAD,CAJzC;AAKE,IAAA,cAAc,EAAGA,GAAD,IAASA,GAAG,CAACC,EAL/B;AAME,IAAA,cAAc,EAAGD,GAAD,IACb,GAAEA,GAAG,CAACE,MAAO,oBAAmBF,GAAG,CAACG,UAAW,EAPpD;AASE,IAAA,WAAW,EAAC,uBATd;AAUE,IAAA,gBAAgB,EAAE,MAAM,mBAV1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAoBD","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport Select from 'react-select';\r\nimport { useQuery } from '@apollo/client';\r\nimport PedidoContext from '../../context/pedidos/PedidoContex';\r\nimport { OBTENER_PRODUCTOS } from '../../graphql/productos';\r\n\r\nexport default function AsignarProductos() {\r\n  const [productos, setProductos] = useState([]);\r\n  const { agregarProducto } = useContext(PedidoContext);\r\n  const { data, loading, error } = useQuery(OBTENER_PRODUCTOS);\r\n\r\n  useEffect(() => {\r\n    agregarProducto(productos);\r\n  }, [productos]);\r\n\r\n  const seleccionarProductos = (productos) => {\r\n    setProductos(productos);\r\n  };\r\n\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  const obtenerProductos = data?.obtenerProductos;\r\n\r\n  return (\r\n    <>\r\n      <p className=\"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\">\r\n        1.- Asignar Productos\r\n      </p>\r\n\r\n      <Select\r\n        className=\"mt-3\"\r\n        isMulti={true}\r\n        options={obtenerProductos}\r\n        onChange={(opc) => seleccionarProductos(opc)}\r\n        getOptionValue={(opc) => opc.id}\r\n        getOptionLabel={(opc) =>\r\n          `${opc.nombre}  |  Disponible: ${opc.existencia}`\r\n        }\r\n        placeholder=\"Seleccionar Productos\"\r\n        noOptionsMessage={() => 'No hay resultados'}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}