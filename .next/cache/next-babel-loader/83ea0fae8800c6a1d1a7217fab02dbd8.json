{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  query obtenerClientes {\\n    obtenerClientes {\\n      id\\n      cedula\\n      nombre\\n      mail\\n      telefono\\n      direccion\\n      ciudad\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  query obtenerCliente($id: ID!) {\\n    obtenerCliente(id: $id) {\\n      cedula\\n      nombre\\n      mail\\n      telefono\\n      direccion\\n      ciudad\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation actualizarCliente($id: ID!, $input: ClienteInput!) {\\n    actualizarCliente(id: $id, input: $input) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation eliminarCliente($id: ID!) {\\n    eliminarCliente(id: $id)\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation nuevoCliente($input: ClienteInput!) {\\n    nuevoCliente(input: $input) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from '@apollo/client';\nexport var NUEVO_CLIENTE = gql(_templateObject());\nexport var ELIMINAR_CLIENTE = gql(_templateObject2());\nexport var ACTUALIZAR_CLIENTE = gql(_templateObject3());\nexport var OBTENER_CLIENTE = gql(_templateObject4());\nexport var OBTENER_CLIENTES = gql(_templateObject5());","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/graphql/clientes.js"],"names":["gql","NUEVO_CLIENTE","ELIMINAR_CLIENTE","ACTUALIZAR_CLIENTE","OBTENER_CLIENTE","OBTENER_CLIENTES"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,IAAMC,aAAa,GAAGD,GAAH,mBAAnB;AAQP,OAAO,IAAME,gBAAgB,GAAGF,GAAH,oBAAtB;AAMP,OAAO,IAAMG,kBAAkB,GAAGH,GAAH,oBAAxB;AAQP,OAAO,IAAMI,eAAe,GAAGJ,GAAH,oBAArB;AAaP,OAAO,IAAMK,gBAAgB,GAAGL,GAAH,oBAAtB","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const NUEVO_CLIENTE = gql`\r\n  mutation nuevoCliente($input: ClienteInput!) {\r\n    nuevoCliente(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ELIMINAR_CLIENTE = gql`\r\n  mutation eliminarCliente($id: ID!) {\r\n    eliminarCliente(id: $id)\r\n  }\r\n`;\r\n\r\nexport const ACTUALIZAR_CLIENTE = gql`\r\n  mutation actualizarCliente($id: ID!, $input: ClienteInput!) {\r\n    actualizarCliente(id: $id, input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const OBTENER_CLIENTE = gql`\r\n  query obtenerCliente($id: ID!) {\r\n    obtenerCliente(id: $id) {\r\n      cedula\r\n      nombre\r\n      mail\r\n      telefono\r\n      direccion\r\n      ciudad\r\n    }\r\n  }\r\n`;\r\n\r\nexport const OBTENER_CLIENTES = gql`\r\n  query obtenerClientes {\r\n    obtenerClientes {\r\n      id\r\n      cedula\r\n      nombre\r\n      mail\r\n      telefono\r\n      direccion\r\n      ciudad\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}