{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\component\\\\pedidos\\\\Pedido.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ACTUALIZAR_PEDIDO, ELIMINAR_PEDIDO, OBTENER_PEDIDOS_SINGLE } from '../../graphql/pedidos';\nimport Swal from 'sweetalert2';\nimport { useMessage } from '../../hooks/useMessage';\nexport default function Pedido(_ref) {\n  _s();\n\n  var _this = this;\n\n  var pedido = _ref.pedido;\n\n  var _useMessage = useMessage(),\n      _useMessage2 = _slicedToArray(_useMessage, 3),\n      mensaje = _useMessage2[0],\n      guardarMensaje = _useMessage2[1],\n      mostrarMensaje = _useMessage2[2];\n\n  var id = pedido.id,\n      total = pedido.total,\n      cliente = pedido.cliente,\n      estado = pedido.estado;\n  var nombre = cliente.nombre,\n      mail = cliente.mail,\n      telefono = cliente.telefono;\n\n  var _useMutation = useMutation(ACTUALIZAR_PEDIDO),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      actualizarPedido = _useMutation2[0];\n\n  var _useMutation3 = useMutation(ELIMINAR_PEDIDO, {\n    update: function update(cache) {\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PEDIDOS_SINGLE\n      }),\n          obtenerPedidos = _cache$readQuery.obtenerPedidos;\n\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS_SINGLE,\n        data: {\n          obtenerPedidos: obtenerPedidos.filter(function (pedido) {\n            return pedido.id !== id;\n          })\n        }\n      });\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      eliminarPedido = _useMutation4[0];\n\n  var _useState = useState(estado),\n      estadoPedido = _useState[0],\n      setEstadoPedido = _useState[1];\n\n  var _useState2 = useState(''),\n      clase = _useState2[0],\n      setClase = _useState2[1];\n\n  useEffect(function () {\n    if (estadoPedido) {\n      setEstadoPedido(estadoPedido);\n    }\n\n    clasePedido();\n  }, [estadoPedido]);\n\n  var clasePedido = function clasePedido() {\n    if (estadoPedido === 'PENDIENTE') {\n      setClase('border-yellow-500');\n    } else if (estadoPedido === 'PAGADO') {\n      setClase('border-green-500');\n    } else {\n      setClase('border-blue-800');\n    }\n  };\n\n  var cambiarEstadoPedido = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(nuevoEstado) {\n      var _yield$actualizarPedi, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return actualizarPedido({\n                variables: {\n                  id: id,\n                  input: {\n                    estado: nuevoEstado,\n                    cliente: cliente.id\n                  }\n                }\n              });\n\n            case 3:\n              _yield$actualizarPedi = _context.sent;\n              data = _yield$actualizarPedi.data;\n              setEstadoPedido(data.actualizarPedido.estado);\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              guardarMensaje(_context.t0.message.replace('Graphql error:', ''));\n              setTimeout(function () {\n                guardarMensaje(null);\n              }, 3000);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function cambiarEstadoPedido(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var confirmarEliminarPedido = function confirmarEliminarPedido() {\n    Swal.fire({\n      title: '¿Deseas eliminar a este pedido?',\n      text: 'Esta acción no se puede deshacer',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Eliminar',\n      cancelButtonText: 'No, Cancelar'\n    }).then( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(result) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!result.value) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.prev = 1;\n                _context2.next = 4;\n                return eliminarPedido({\n                  variables: {\n                    id: id\n                  }\n                });\n\n              case 4:\n                data = _context2.sent;\n                Swal.fire('Eliminado', data.eliminarPedido, 'success');\n                _context2.next = 12;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                guardarMensaje(_context2.t0.message.replace('Graphql error:', ''));\n                setTimeout(function () {\n                  guardarMensaje(null);\n                }, 3000);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  };\n\n  return __jsx(\"div\", {\n    className: \" \".concat(clase, \" border-t-4 mt-4 bg-white rounded p-6 md:grid md:grid-cols-2 md:gap-4 shadow-lg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, mensaje && mostrarMensaje(), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Cliente: \", nombre), mail && __jsx(\"p\", {\n    className: \"flex items-center my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(\"path\", {\n    d: \"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  })), mail), telefono && __jsx(\"p\", {\n    className: \"flex items-center my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, __jsx(\"path\", {\n    d: \"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  })), telefono), __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \"Estado Pedido:\"), __jsx(\"select\", {\n    className: \"mt-2 appearance-none bg-blue-600 border border-blue-600 text-white p-2 text-center rounded leading-tight focus:outline-none focus:bg-blue-600 focus:border-blue-500 uppercase text-xs font-bold \",\n    value: estadoPedido,\n    onChange: function onChange(e) {\n      return cambiarEstadoPedido(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, __jsx(\"option\", {\n    value: \"PENDIENTE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"PENDIENTE\"), __jsx(\"option\", {\n    value: \"PAGADO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"PAGADO\"), __jsx(\"option\", {\n    value: \"DESPACHADO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"DESPACHADO\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"Resumen del Pedido\"), pedido.pedido.map(function (articulo) {\n    return __jsx(\"div\", {\n      key: articulo.id,\n      className: \"mt-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: \"text-sm text-gray-600\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \"Producto: \", articulo.nombre, ' '), __jsx(\"p\", {\n      className: \"text-sm text-gray-600\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \"Cantidad: \", articulo.cantidad, ' '));\n  }), __jsx(\"p\", {\n    className: \"text-gray-800 mt-3 font-bold \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"Total a pagar:\", __jsx(\"span\", {\n    className: \"font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \" $ \", total)), __jsx(\"button\", {\n    className: \"uppercase text-xs font-bold  flex items-center mt-4 bg-red-800 px-5 py-2 inline-block text-white rounded leading-tight\",\n    onClick: function onClick() {\n      return confirmarEliminarPedido();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"Eliminar Pedido\", __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, __jsx(\"path\", {\n    d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(Pedido, \"bJWVowWcjQsdw2aE5GZ8WFkXr0U=\", false, function () {\n  return [useMessage, useMutation, useMutation];\n});\n\n_c = Pedido;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pedido\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/component/pedidos/Pedido.js"],"names":["React","useState","useEffect","useMutation","ACTUALIZAR_PEDIDO","ELIMINAR_PEDIDO","OBTENER_PEDIDOS_SINGLE","Swal","useMessage","Pedido","pedido","mensaje","guardarMensaje","mostrarMensaje","id","total","cliente","estado","nombre","mail","telefono","actualizarPedido","update","cache","readQuery","query","obtenerPedidos","writeQuery","data","filter","eliminarPedido","estadoPedido","setEstadoPedido","clase","setClase","clasePedido","cambiarEstadoPedido","nuevoEstado","variables","input","message","replace","setTimeout","confirmarEliminarPedido","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","e","target","map","articulo","cantidad"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport {\r\n  ACTUALIZAR_PEDIDO,\r\n  ELIMINAR_PEDIDO,\r\n  OBTENER_PEDIDOS_SINGLE,\r\n} from '../../graphql/pedidos';\r\nimport Swal from 'sweetalert2';\r\nimport { useMessage } from '../../hooks/useMessage';\r\n\r\nexport default function Pedido({ pedido }) {\r\n  const [mensaje, guardarMensaje, mostrarMensaje] = useMessage();\r\n  const { id, total, cliente, estado } = pedido;\r\n  const { nombre, mail, telefono } = cliente;\r\n  const [actualizarPedido] = useMutation(ACTUALIZAR_PEDIDO);\r\n  const [eliminarPedido] = useMutation(ELIMINAR_PEDIDO, {\r\n    update(cache) {\r\n      const { obtenerPedidos } = cache.readQuery({\r\n        query: OBTENER_PEDIDOS_SINGLE,\r\n      });\r\n\r\n      cache.writeQuery({\r\n        query: OBTENER_PEDIDOS_SINGLE,\r\n        data: {\r\n          obtenerPedidos: obtenerPedidos.filter((pedido) => pedido.id !== id),\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  const [estadoPedido, setEstadoPedido] = useState(estado);\r\n  const [clase, setClase] = useState('');\r\n  useEffect(() => {\r\n    if (estadoPedido) {\r\n      setEstadoPedido(estadoPedido);\r\n    }\r\n    clasePedido();\r\n  }, [estadoPedido]);\r\n\r\n  const clasePedido = () => {\r\n    if (estadoPedido === 'PENDIENTE') {\r\n      setClase('border-yellow-500');\r\n    } else if (estadoPedido === 'PAGADO') {\r\n      setClase('border-green-500');\r\n    } else {\r\n      setClase('border-blue-800');\r\n    }\r\n  };\r\n\r\n  const cambiarEstadoPedido = async (nuevoEstado) => {\r\n    try {\r\n      const { data } = await actualizarPedido({\r\n        variables: {\r\n          id,\r\n          input: { estado: nuevoEstado, cliente: cliente.id },\r\n        },\r\n      });\r\n      setEstadoPedido(data.actualizarPedido.estado);\r\n    } catch (error) {\r\n      guardarMensaje(error.message.replace('Graphql error:', ''));\r\n\r\n      setTimeout(() => {\r\n        guardarMensaje(null);\r\n      }, 3000);\r\n    }\r\n  };\r\n  const confirmarEliminarPedido = () => {\r\n    Swal.fire({\r\n      title: '¿Deseas eliminar a este pedido?',\r\n      text: 'Esta acción no se puede deshacer',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, Eliminar',\r\n      cancelButtonText: 'No, Cancelar',\r\n    }).then(async (result) => {\r\n      if (result.value) {\r\n        try {\r\n          const data = await eliminarPedido({\r\n            variables: {\r\n              id,\r\n            },\r\n          });\r\n\r\n          Swal.fire('Eliminado', data.eliminarPedido, 'success');\r\n        } catch (error) {\r\n          guardarMensaje(error.message.replace('Graphql error:', ''));\r\n\r\n          setTimeout(() => {\r\n            guardarMensaje(null);\r\n          }, 3000);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={` ${clase} border-t-4 mt-4 bg-white rounded p-6 md:grid md:grid-cols-2 md:gap-4 shadow-lg`}\r\n    >\r\n      {mensaje && mostrarMensaje()}\r\n      <div>\r\n        <p className=\"font-bold text-gray-800\">Cliente: {nombre}</p>\r\n\r\n        {mail && (\r\n          <p className=\"flex items-center my-2\">\r\n            <svg\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              viewBox=\"0 0 24 24\"\r\n              className=\"w-4 h-4 mr-2\"\r\n            >\r\n              <path d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\r\n            </svg>\r\n            {mail}\r\n          </p>\r\n        )}\r\n\r\n        {telefono && (\r\n          <p className=\"flex items-center my-2\">\r\n            <svg\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              viewBox=\"0 0 24 24\"\r\n              className=\"w-4 h-4 mr-2\"\r\n            >\r\n              <path d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"></path>\r\n            </svg>\r\n            {telefono}\r\n          </p>\r\n        )}\r\n\r\n        <h2 className=\"text-gray-800 font-bold mt-10\">Estado Pedido:</h2>\r\n\r\n        <select\r\n          className=\"mt-2 appearance-none bg-blue-600 border border-blue-600 text-white p-2 text-center rounded leading-tight focus:outline-none focus:bg-blue-600 focus:border-blue-500 uppercase text-xs font-bold \"\r\n          value={estadoPedido}\r\n          onChange={(e) => cambiarEstadoPedido(e.target.value)}\r\n        >\r\n          <option value=\"PENDIENTE\">PENDIENTE</option>\r\n          <option value=\"PAGADO\">PAGADO</option>\r\n          <option value=\"DESPACHADO\">DESPACHADO</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <h2 className=\"text-gray-800 font-bold mt-2\">Resumen del Pedido</h2>\r\n        {pedido.pedido.map((articulo) => (\r\n          <div key={articulo.id} className=\"mt-4\">\r\n            <p className=\"text-sm text-gray-600\">\r\n              Producto: {articulo.nombre}{' '}\r\n            </p>\r\n            <p className=\"text-sm text-gray-600\">\r\n              Cantidad: {articulo.cantidad}{' '}\r\n            </p>\r\n          </div>\r\n        ))}\r\n\r\n        <p className=\"text-gray-800 mt-3 font-bold \">\r\n          Total a pagar:\r\n          <span className=\"font-light\"> $ {total}</span>\r\n        </p>\r\n\r\n        <button\r\n          className=\"uppercase text-xs font-bold  flex items-center mt-4 bg-red-800 px-5 py-2 inline-block text-white rounded leading-tight\"\r\n          onClick={() => confirmarEliminarPedido()}\r\n        >\r\n          Eliminar Pedido\r\n          <svg\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            viewBox=\"0 0 24 24\"\r\n            className=\"w-4 h-4 ml-2\"\r\n          >\r\n            <path d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}