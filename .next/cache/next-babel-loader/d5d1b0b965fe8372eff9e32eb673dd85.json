{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\component\\\\pedidos\\\\Pedido.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ACTUALIZAR_PEDIDO, ELIMINAR_PEDIDO, OBTENER_PEDIDOS_SINGLE } from '../../graphql/pedidos';\nimport Swal from 'sweetalert2';\nimport { useMessage } from '../../hooks/useMessage';\nexport default function Pedido({\n  pedido\n}) {\n  const [mensaje, guardarMensaje, mostrarMensaje] = useMessage();\n  const {\n    id,\n    total,\n    cliente: {\n      nombre,\n      telefono\n    },\n    estado\n  } = pedido;\n  const [actualizarPedido] = useMutation(ACTUALIZAR_PEDIDO);\n  const [eliminarPedido] = useMutation(ELIMINAR_PEDIDO, {\n    update(cache) {\n      const {\n        obtenerPedidos\n      } = cache.readQuery({\n        query: OBTENER_PEDIDOS_SINGLE\n      });\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS_SINGLE,\n        data: {\n          obtenerPedidos: obtenerPedidos.filter(pedido => pedido.id !== id)\n        }\n      });\n    }\n\n  });\n  const {\n    0: estadoPedido,\n    1: setEstadoPedido\n  } = useState(estado);\n  const {\n    0: clase,\n    1: setClase\n  } = useState('');\n  useEffect(() => {\n    if (estadoPedido) {\n      setEstadoPedido(estadoPedido);\n    }\n\n    clasePedido();\n  }, [estadoPedido]);\n\n  const clasePedido = () => {\n    if (estadoPedido === 'PENDIENTE') {\n      setClase('border-yellow-500');\n    } else if (estadoPedido === 'PAGADO') {\n      setClase('border-green-500');\n    } else {\n      setClase('border-blue-800');\n    }\n  };\n\n  const cambiarEstadoPedido = async nuevoEstado => {\n    try {\n      const {\n        data\n      } = await actualizarPedido({\n        variables: {\n          id,\n          input: {\n            estado: nuevoEstado\n          }\n        }\n      });\n      setEstadoPedido(data.actualizarPedido.estado);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const confirmarEliminarPedido = () => {\n    Swal.fire({\n      title: '¿Deseas eliminar a este pedido?',\n      text: 'Esta acción no se puede deshacer',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Eliminar',\n      cancelButtonText: 'No, Cancelar'\n    }).then(async result => {\n      if (result.value) {\n        try {\n          const data = await eliminarPedido({\n            variables: {\n              id\n            }\n          });\n          Swal.fire('Eliminado', data.eliminarPedido, 'success');\n        } catch (error) {\n          guardarMensaje(error.message.replace('Graphql error:', ''));\n          setTimeout(() => {\n            guardarMensaje(null);\n          }, 3000);\n        }\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: ` ${clase} border-t-4 mt-4 bg-white rounded p-6 md:grid md:grid-cols-2 md:gap-4 shadow-lg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, mensaje && mostrarMensaje(), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Cliente: \", nombre), email && __jsx(\"p\", {\n    className: \"flex items-center my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(\"path\", {\n    d: \"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  })), email), telefono && __jsx(\"p\", {\n    className: \"flex items-center my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, __jsx(\"path\", {\n    d: \"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  })), telefono), __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \"Estado Pedido:\"), __jsx(\"select\", {\n    className: \"mt-2 appearance-none bg-blue-600 border border-blue-600 text-white p-2 text-center rounded leading-tight focus:outline-none focus:bg-blue-600 focus:border-blue-500 uppercase text-xs font-bold \",\n    value: estadoPedido,\n    onChange: e => cambiarEstadoPedido(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, __jsx(\"option\", {\n    value: \"COMPLETADO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"PENDIENTE\"), __jsx(\"option\", {\n    value: \"PENDIENTE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"PAGADO\"), __jsx(\"option\", {\n    value: \"CANCELADO\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"DESPACHADO\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"Resumen del Pedido\"), pedido.pedido.map(articulo => __jsx(\"div\", {\n    key: articulo.id,\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"text-sm text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Producto: \", articulo.nombre, ' '), __jsx(\"p\", {\n    className: \"text-sm text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Cantidad: \", articulo.cantidad, ' '))), __jsx(\"p\", {\n    className: \"text-gray-800 mt-3 font-bold \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"Total a pagar:\", __jsx(\"span\", {\n    className: \"font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \" $ \", total)), __jsx(\"button\", {\n    className: \"uppercase text-xs font-bold  flex items-center mt-4 bg-red-800 px-5 py-2 inline-block text-white rounded leading-tight\",\n    onClick: () => confirmarEliminarPedido(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"Eliminar Pedido\", __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, __jsx(\"path\", {\n    d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/component/pedidos/Pedido.js"],"names":["React","useState","useEffect","useMutation","ACTUALIZAR_PEDIDO","ELIMINAR_PEDIDO","OBTENER_PEDIDOS_SINGLE","Swal","useMessage","Pedido","pedido","mensaje","guardarMensaje","mostrarMensaje","id","total","cliente","nombre","telefono","estado","actualizarPedido","eliminarPedido","update","cache","obtenerPedidos","readQuery","query","writeQuery","data","filter","estadoPedido","setEstadoPedido","clase","setClase","clasePedido","cambiarEstadoPedido","nuevoEstado","variables","input","error","console","log","confirmarEliminarPedido","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","message","replace","setTimeout","email","e","target","map","articulo","cantidad"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport {\r\n  ACTUALIZAR_PEDIDO,\r\n  ELIMINAR_PEDIDO,\r\n  OBTENER_PEDIDOS_SINGLE,\r\n} from '../../graphql/pedidos';\r\nimport Swal from 'sweetalert2';\r\nimport { useMessage } from '../../hooks/useMessage';\r\n\r\nexport default function Pedido({ pedido }) {\r\n  const [mensaje, guardarMensaje, mostrarMensaje] = useMessage();\r\n  const {\r\n    id,\r\n    total,\r\n    cliente: { nombre, telefono },\r\n    estado,\r\n  } = pedido;\r\n  const [actualizarPedido] = useMutation(ACTUALIZAR_PEDIDO);\r\n  const [eliminarPedido] = useMutation(ELIMINAR_PEDIDO, {\r\n    update(cache) {\r\n      const { obtenerPedidos } = cache.readQuery({\r\n        query: OBTENER_PEDIDOS_SINGLE,\r\n      });\r\n\r\n      cache.writeQuery({\r\n        query: OBTENER_PEDIDOS_SINGLE,\r\n        data: {\r\n          obtenerPedidos: obtenerPedidos.filter((pedido) => pedido.id !== id),\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  const [estadoPedido, setEstadoPedido] = useState(estado);\r\n  const [clase, setClase] = useState('');\r\n  useEffect(() => {\r\n    if (estadoPedido) {\r\n      setEstadoPedido(estadoPedido);\r\n    }\r\n    clasePedido();\r\n  }, [estadoPedido]);\r\n\r\n  const clasePedido = () => {\r\n    if (estadoPedido === 'PENDIENTE') {\r\n      setClase('border-yellow-500');\r\n    } else if (estadoPedido === 'PAGADO') {\r\n      setClase('border-green-500');\r\n    } else {\r\n      setClase('border-blue-800');\r\n    }\r\n  };\r\n\r\n  const cambiarEstadoPedido = async (nuevoEstado) => {\r\n    try {\r\n      const { data } = await actualizarPedido({\r\n        variables: {\r\n          id,\r\n          input: { estado: nuevoEstado },\r\n        },\r\n      });\r\n      setEstadoPedido(data.actualizarPedido.estado);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const confirmarEliminarPedido = () => {\r\n    Swal.fire({\r\n      title: '¿Deseas eliminar a este pedido?',\r\n      text: 'Esta acción no se puede deshacer',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, Eliminar',\r\n      cancelButtonText: 'No, Cancelar',\r\n    }).then(async (result) => {\r\n      if (result.value) {\r\n        try {\r\n          const data = await eliminarPedido({\r\n            variables: {\r\n              id,\r\n            },\r\n          });\r\n\r\n          Swal.fire('Eliminado', data.eliminarPedido, 'success');\r\n        } catch (error) {\r\n          guardarMensaje(error.message.replace('Graphql error:', ''));\r\n\r\n          setTimeout(() => {\r\n            guardarMensaje(null);\r\n          }, 3000);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={` ${clase} border-t-4 mt-4 bg-white rounded p-6 md:grid md:grid-cols-2 md:gap-4 shadow-lg`}\r\n    >\r\n      {mensaje && mostrarMensaje()}\r\n      <div>\r\n        <p className=\"font-bold text-gray-800\">Cliente: {nombre}</p>\r\n\r\n        {email && (\r\n          <p className=\"flex items-center my-2\">\r\n            <svg\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              viewBox=\"0 0 24 24\"\r\n              className=\"w-4 h-4 mr-2\"\r\n            >\r\n              <path d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\r\n            </svg>\r\n            {email}\r\n          </p>\r\n        )}\r\n\r\n        {telefono && (\r\n          <p className=\"flex items-center my-2\">\r\n            <svg\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              viewBox=\"0 0 24 24\"\r\n              className=\"w-4 h-4 mr-2\"\r\n            >\r\n              <path d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"></path>\r\n            </svg>\r\n            {telefono}\r\n          </p>\r\n        )}\r\n\r\n        <h2 className=\"text-gray-800 font-bold mt-10\">Estado Pedido:</h2>\r\n\r\n        <select\r\n          className=\"mt-2 appearance-none bg-blue-600 border border-blue-600 text-white p-2 text-center rounded leading-tight focus:outline-none focus:bg-blue-600 focus:border-blue-500 uppercase text-xs font-bold \"\r\n          value={estadoPedido}\r\n          onChange={(e) => cambiarEstadoPedido(e.target.value)}\r\n        >\r\n          <option value=\"COMPLETADO\">PENDIENTE</option>\r\n          <option value=\"PENDIENTE\">PAGADO</option>\r\n          <option value=\"CANCELADO\">DESPACHADO</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <h2 className=\"text-gray-800 font-bold mt-2\">Resumen del Pedido</h2>\r\n        {pedido.pedido.map((articulo) => (\r\n          <div key={articulo.id} className=\"mt-4\">\r\n            <p className=\"text-sm text-gray-600\">\r\n              Producto: {articulo.nombre}{' '}\r\n            </p>\r\n            <p className=\"text-sm text-gray-600\">\r\n              Cantidad: {articulo.cantidad}{' '}\r\n            </p>\r\n          </div>\r\n        ))}\r\n\r\n        <p className=\"text-gray-800 mt-3 font-bold \">\r\n          Total a pagar:\r\n          <span className=\"font-light\"> $ {total}</span>\r\n        </p>\r\n\r\n        <button\r\n          className=\"uppercase text-xs font-bold  flex items-center mt-4 bg-red-800 px-5 py-2 inline-block text-white rounded leading-tight\"\r\n          onClick={() => confirmarEliminarPedido()}\r\n        >\r\n          Eliminar Pedido\r\n          <svg\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            viewBox=\"0 0 24 24\"\r\n            className=\"w-4 h-4 ml-2\"\r\n          >\r\n            <path d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}