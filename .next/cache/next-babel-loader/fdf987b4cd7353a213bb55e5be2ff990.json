{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\component\\\\pedidos\\\\AsignarCliente.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport Select from 'react-select';\nimport { useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContex';\nimport { OBTENER_CLIENTES } from '../../graphql/clientes';\nexport default function AsignarCliente() {\n  const {\n    0: cliente,\n    1: setCliente\n  } = useState({});\n  const {\n    agregarCliente\n  } = useContext(PedidoContext);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_CLIENTES);\n  useEffect(() => {\n    agregarCliente(cliente);\n  }, [cliente]);\n\n  const seleccionarCliente = client => {\n    setCliente(client);\n  };\n\n  if (loading) return null;\n  if (error) return null;\n  const obtenerClientes = data === null || data === void 0 ? void 0 : data.obtenerClientes;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"1.- Asigna un Cliente al pedido\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerClientes,\n    onChange: opc => seleccionarCliente(opc),\n    getOptionValue: opc => opc.id,\n    getOptionLabel: opc => opc.nombre,\n    placeholder: \"Seleccionar Cliente\",\n    noOptionsMessage: () => 'No hay resultados',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/component/pedidos/AsignarCliente.js"],"names":["React","useState","useEffect","useContext","Select","useQuery","PedidoContext","OBTENER_CLIENTES","AsignarCliente","cliente","setCliente","agregarCliente","data","loading","error","seleccionarCliente","client","obtenerClientes","opc","id","nombre"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAqBR,UAAU,CAACG,aAAD,CAArC;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BT,QAAQ,CAACE,gBAAD,CAAzC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,cAAc,CAACF,OAAD,CAAd;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,QAAMM,kBAAkB,GAAIC,MAAD,IAAY;AACrCN,IAAAA,UAAU,CAACM,MAAD,CAAV;AACD,GAFD;;AAIA,MAAIH,OAAJ,EAAa,OAAO,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,IAAP;AACX,QAAMG,eAAe,GAAGL,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEK,eAA9B;AAEA,SACE,4BACE;AAAG,IAAA,SAAS,EAAC,oFAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAKE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,OAAO,EAAEA,eAFX;AAGE,IAAA,QAAQ,EAAGC,GAAD,IAASH,kBAAkB,CAACG,GAAD,CAHvC;AAIE,IAAA,cAAc,EAAGA,GAAD,IAASA,GAAG,CAACC,EAJ/B;AAKE,IAAA,cAAc,EAAGD,GAAD,IAASA,GAAG,CAACE,MAL/B;AAME,IAAA,WAAW,EAAC,qBANd;AAOE,IAAA,gBAAgB,EAAE,MAAM,mBAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAiBD","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport Select from 'react-select';\r\nimport { useQuery } from '@apollo/client';\r\nimport PedidoContext from '../../context/pedidos/PedidoContex';\r\nimport { OBTENER_CLIENTES } from '../../graphql/clientes';\r\n\r\nexport default function AsignarCliente() {\r\n  const [cliente, setCliente] = useState({});\r\n  const { agregarCliente } = useContext(PedidoContext);\r\n  const { data, loading, error } = useQuery(OBTENER_CLIENTES);\r\n\r\n  useEffect(() => {\r\n    agregarCliente(cliente);\r\n  }, [cliente]);\r\n\r\n  const seleccionarCliente = (client) => {\r\n    setCliente(client);\r\n  };\r\n\r\n  if (loading) return null;\r\n  if (error) return null;\r\n  const obtenerClientes = data?.obtenerClientes;\r\n\r\n  return (\r\n    <>\r\n      <p className=\"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\">\r\n        1.- Asigna un Cliente al pedido\r\n      </p>\r\n\r\n      <Select\r\n        className=\"mt-3\"\r\n        options={obtenerClientes}\r\n        onChange={(opc) => seleccionarCliente(opc)}\r\n        getOptionValue={(opc) => opc.id}\r\n        getOptionLabel={(opc) => opc.nombre}\r\n        placeholder=\"Seleccionar Cliente\"\r\n        noOptionsMessage={() => 'No hay resultados'}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}