{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../component/Layout';\nimport { useQuery, useApolloClient } from '@apollo/client';\nimport { OBTENER_CLIENTES } from '../graphql/clientes';\nimport Cliente from '../component/Cliente';\n\nconst Index = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_CLIENTES);\n  const obtenerClientes = data === null || data === void 0 ? void 0 : data.obtenerClientes;\n  if (loading) return 'Cargando...';\n  if (error) return `Error || ${error.message}`;\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Clientes\"), __jsx(Link, {\n    href: \"/nuevocliente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    className: \"bg-blue-800 py-2 px-5 mt-3 inline-block text-white rounded text-sm hover:bg-gray-800 mb-3 uppercase font-bold w-full lg:w-auto text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Nuevo Cliente\")), __jsx(\"div\", {\n    className: \"overflow-x-scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"table\", {\n    className: \"table-auto shadow-md mt-10 w-full w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"thead\", {\n    className: \"bg-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, __jsx(\"tr\", {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, \"Nombre\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, \"Cedula\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, \"Telefono\"), __jsx(\"th\", {\n    className: \"w-1/5 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"Email\"), __jsx(\"th\", {\n    className: \"w-1/3 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Eliminar\"), __jsx(\"th\", {\n    className: \"w-1/3 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"Editar\"))), __jsx(\"tbody\", {\n    className: \"bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, obtenerClientes.map(cliente => __jsx(Cliente, {\n    key: cliente.id,\n    cliente: cliente,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/index.js"],"names":["Link","Layout","useQuery","useApolloClient","OBTENER_CLIENTES","Cliente","Index","data","loading","error","obtenerClientes","message","map","cliente","id"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,gBAA1C;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACE,gBAAD,CAAzC;AACA,QAAMM,eAAe,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,eAA9B;AAEA,MAAIF,OAAJ,EAAa,OAAO,aAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,YAAWA,KAAK,CAACE,OAAQ,EAAjC;AAEX,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,4IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAHF,EASE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,wCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAME;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CADF,CADF,EAYE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,eAAe,CAACE,GAAhB,CAAqBC,OAAD,IACnB,MAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,OAAO,CAACC,EAAtB;AAA0B,IAAA,OAAO,EAAED,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAZF,CADF,CATF,CADF;AAgCD,CAvCD;;AAyCA,eAAeP,KAAf","sourcesContent":["import Link from 'next/link';\nimport Layout from '../component/Layout';\nimport { useQuery, useApolloClient } from '@apollo/client';\nimport { OBTENER_CLIENTES } from '../graphql/clientes';\nimport Cliente from '../component/Cliente';\n\nconst Index = () => {\n  const { data, loading, error } = useQuery(OBTENER_CLIENTES);\n  const obtenerClientes = data?.obtenerClientes;\n\n  if (loading) return 'Cargando...';\n  if (error) return `Error || ${error.message}`;\n\n  return (\n    <Layout>\n      <h1 className=\"text-2xl text-gray-800 font-light\">Clientes</h1>\n\n      <Link href=\"/nuevocliente\">\n        <a className=\"bg-blue-800 py-2 px-5 mt-3 inline-block text-white rounded text-sm hover:bg-gray-800 mb-3 uppercase font-bold w-full lg:w-auto text-center\">\n          Nuevo Cliente\n        </a>\n      </Link>\n\n      <div className=\"overflow-x-scroll\">\n        <table className=\"table-auto shadow-md mt-10 w-full w-lg\">\n          <thead className=\"bg-gray-800\">\n            <tr className=\"text-white\">\n              <th className=\"w-1/5 py-2\">Nombre</th>\n              <th className=\"w-1/5 py-2\">Cedula</th>\n              <th className=\"w-1/5 py-2\">Telefono</th>\n              <th className=\"w-1/5 py-2\">Email</th>\n              <th className=\"w-1/3 py-2\">Eliminar</th>\n              <th className=\"w-1/3 py-2\">Editar</th>\n            </tr>\n          </thead>\n\n          <tbody className=\"bg-white\">\n            {obtenerClientes.map((cliente) => (\n              <Cliente key={cliente.id} cliente={cliente} />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}