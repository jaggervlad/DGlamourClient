{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\DGlamour\\\\client\\\\pages\\\\categorias.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { OBTENER_CATEGORIAS } from '../graphql/categorias';\nimport { initializeApollo } from '../apollo/apolloClient';\nexport default function Categorias(_x) {\n  return _Categorias.apply(this, arguments);\n}\n_c2 = Categorias;\n\nfunction _Categorias() {\n  _Categorias = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(props) {\n    var client, categorias;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            client = initializeApollo();\n            _context2.next = 3;\n            return client.query({\n              query: OBTENER_CATEGORIAS\n            });\n\n          case 3:\n            categorias = _context2.sent;\n            console.log(categorias);\n            return _context2.abrupt(\"return\", __jsx(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 9,\n                columnNumber: 10\n              }\n            }, \"Desde Categorias\"));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _Categorias.apply(this, arguments);\n}\n\n_c = Categorias;\nexport var getStaticsProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var client, categorias;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            client = initializeApollo();\n            _context.next = 3;\n            return client.query({\n              query: OBTENER_CATEGORIAS\n            });\n\n          case 3:\n            categorias = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: categorias\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getStaticsProps(_x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Categorias\");\n$RefreshReg$(_c2, \"Categorias\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/DGlamour/client/pages/categorias.js"],"names":["OBTENER_CATEGORIAS","initializeApollo","Categorias","props","client","query","categorias","console","log","getStaticsProps","context"],"mappings":";;;;;AAAA,SAASA,kBAAT,QAAmC,uBAAnC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,wBAA8BC,UAA9B;AAAA;AAAA;MAA8BA,U;;;yEAAf,kBAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,MADO,GACEH,gBAAgB,EADlB;AAAA;AAAA,mBAEYG,MAAM,CAACC,KAAP,CAAa;AAAEA,cAAAA,KAAK,EAAEL;AAAT,aAAb,CAFZ;;AAAA;AAEPM,YAAAA,UAFO;AAIbC,YAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAJa,8CAKN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCALM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeJ,U;AAQ9B,OAAO,IAAMO,eAAe;AAAA,sEAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBN,YAAAA,MADuB,GACdH,gBAAgB,EADF;AAAA;AAAA,mBAEJG,MAAM,CAACC,KAAP,CAAa;AAAEA,cAAAA,KAAK,EAAEL;AAAT,aAAb,CAFI;;AAAA;AAEvBM,YAAAA,UAFuB;AAAA,6CAItB;AACLH,cAAAA,KAAK,EAAEG;AADF,aAJsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfG,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import { OBTENER_CATEGORIAS } from '../graphql/categorias';\r\nimport { initializeApollo } from '../apollo/apolloClient';\r\n\r\nexport default async function Categorias(props) {\r\n  const client = initializeApollo();\r\n  const categorias = await client.query({ query: OBTENER_CATEGORIAS });\r\n\r\n  console.log(categorias);\r\n  return <p>Desde Categorias</p>;\r\n}\r\n\r\nexport const getStaticsProps = async (context) => {\r\n  const client = initializeApollo();\r\n  const categorias = await client.query({ query: OBTENER_CATEGORIAS });\r\n\r\n  return {\r\n    props: categorias,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}